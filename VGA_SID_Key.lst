  Sun Jan 31 2016  1:45                                                Page 1

    "VGA VGA.asm"
    

                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ; File: VGA_2.asm
     2                        ; 12/10/2015
     3                        
     4                        ;############################# DESCIPTION ########
                    ################
     5                        
     6                        ; Transfer from W65C816SXB to Propeller
     7                        
     8                        ; 1. W65C816SXB waits for PB7 (P15) to be low, $80
     9                        ; 2. W65C816SXB puts data on PIA PA
    10                        ; 3. W65C816SXB puts data on PIA PB with PB6 high.
                     $40
    11                        ; 4. Propeller waits for PB6 (P14) to go high.
    12                        ; 5. Propeller reads PIA PA-PB and sets P15 high.
    13                        ; 6, W65C816SXB waits for PB7 (P15)to be high, $80
    14                        ; 7. W65C816SXB sets PIA PB6 (P14) low. $40
    15                        ; 8. Propeller waits for PB6 (P14) to go low.
    16                        ; 9. Propeller does it's thing...
    17                        ; 10. Propeller sets P15 Low.
    18                        
    19                        ; Note: All connections to the W65C816SXB board ha
                    ve a 1Kohm resistor in series...
    20                        
    21                        ;########################### PIN ASSIGNMENTS #####
                    ################
    22                        
    23                        ;  P0  - Data 0 - PIA PA0 via 1Kohm resistor
    24                        ;  P1  - Data 1 - PIA PA1 via 1Kohm resistor
    25                        ;  P2  - Data 2 - PIA PA2 via 1Kohm resistor
    26                        ;  P3  - Data 3 - PIA PA3 via 1Kohm resistor 
    27                        ;  P4  - Data 4 - PIA PA4 via 1Kohm resistor 
    28                        ;  P5  - Data 5 - PIA PA5 via 1Kohm resistor
    29                        ;  P6  - Data 6 - PIA PA6 via 1Kohm resistor
    30                        ;  P7  - Data 7 - PIA PA7 via 1Kohm resistor
    31                        ;  P8  - Address 0 - PIA PB0 via 1Kohm resistor
    32                        ;  P9  - Address 1 - PIA PB1 via 1Kohm resistor
    33                        ;  P10 - Address 2 - PIA PB2 via 1Kohm resistor
    34                        ;  P11 - Address 3 - PIA PB3 via 1Kohm resistor
    35                        ;  P12 - Address 4 - PIA PB4 via 1Kohm resistor
    36                        ;  P13 - Address 5 - 0 for VGA and 1 for SID  - PI
                    A PB5 via 1Kohm resistor
    37                        ;  P14 - Flag Write - Wait for High from W65C816SX
                    B, once propeller flag busy, W65C816SXB sets low. - PIA PB6 
                    via 1Kohm resistor
    38                        ;  P15 - Flag BUSY - Set high by propeller when pr
                    ocessing. - PIA PB7 via 1Kohm resistor, only input...    
    39                        ;  P16 - VGA VSync - 270 ohm resistor to D-Sub 14
    40                        ;  P17 - VGA HSync - 270 ohm resistor to D-Sub 13 
    41                        ;  P18 - VGA B0 - 560 ohm resistor to D-Sub 3
  Sun Jan 31 2016  1:45                                                Page 2

    "VGA VGA.asm"
    

    42                        ;  P19 - VGA B1 - 270 ohm resistor to D-Sub 3
    43                        ;  P20 - VGA G0 - 560 ohm resistor to D-Sub 2
    44                        ;  P21 - VGA G1 - 270 ohm resistor to D-Sub 2
    45                        ;  P22 - VGA R0 - 560 ohm resistor to D-Sub 1
    46                        ;  P23 - VGA R1 - 270 ohm resistor to D-Sub 1
    47                        ;  P24 - SID Right Channel connect to amplifier fo
                    r headphones or line in to computer 
    48                        ;  P25 - SID Left Channel connect to amplifier for
                     headphones or line in to computer 
    49                        ;  P26 - 
    50                        ;  P27 - 
    51                        ;  P28 - I2C SCL
    52                        ;  P29 - I2C SDA
    53                        ;  P30 - Serial Tx
    54                        ;  P31 - Serial Rx
    55                        
    56                        ;#################################################
                    ################
    57                        
    58                        
    59                        	PW 80          ;Page Width (# of char/line)
    60                        	PL 60          ;Page Length for HP Laser
    61                        	INCLIST ON     ;Add Include files in Listing
    62                        
    63                        ;*********************************************
    64                        ;Test for Valid Processor defined in -D option
    65                        ;*********************************************
    66                        	IF USING_816
    67                        	ELSE
    68                        		EXIT  "Not Valid Processor: Use -DUSING_
                    02, etc."
    69                        	ENDIF
    70                        
    71                        	TITLE  "VGA VGA.asm"
    72                        	STTL
    73                        
    74             00007FC0   VIA_BASE		EQU $7FC0		; base a
                    ddress of VIA port on SXB
    75             00007FC0   VIA_ORB			EQU VIA_BASE
    76             00007FC0   VIA_IRB			EQU VIA_BASE
    77             00007FC1   VIA_ORA			EQU VIA_BASE+1
    78             00007FC1   VIA_IRA			EQU VIA_BASE+1
    79             00007FC2   VIA_DDRB		EQU VIA_BASE+2
    80             00007FC3   VIA_DDRA		EQU VIA_BASE+3
    81             00007FC4   VIA_T1CLO		EQU VIA_BASE+4
    82             00007FC5   VIA_T1CHI		EQU VIA_BASE+5
    83             00007FC6   VIA_T1LLO		EQU VIA_BASE+6
    84             00007FC7   VIA_T1LHI		EQU VIA_BASE+7
    85             00007FC8   VIA_T2CLO		EQU VIA_BASE+8
    86             00007FC9   VIA_T2CHI		EQU VIA_BASE+9
    87             00007FCA   VIA_SR			EQU VIA_BASE+10
    88             00007FCB   VIA_ACR			EQU VIA_BASE+11
    89             00007FCC   VIA_PCR			EQU VIA_BASE+12
    90             00007FCD   VIA_IFR			EQU VIA_BASE+13
    91             00007FCE   VIA_IER			EQU VIA_BASE+14
  Sun Jan 31 2016  1:45                                                Page 3

    "VGA VGA.asm"
    

    92             00007FCF   VIA_ORANH		EQU VIA_BASE+15
    93             00007FCF   VIA_IRANH		EQU VIA_BASE+15
    94                        
    95             00007F20   VIA_PROP_BASE	EQU $7F20		; base a
                    ddress of extra VIA on SXB used for the Propeller
    96             00007F20   VIA_PROP_ORB	EQU VIA_PROP_BASE
    97             00007F20   VIA_PROP_IRB	EQU VIA_PROP_BASE
    98             00007F21   VIA_PROP_ORA	EQU VIA_PROP_BASE+1
    99             00007F21   VIA_PROP_IRA	EQU VIA_PROP_BASE+1
   100             00007F22   VIA_PROP_DDRB	EQU VIA_PROP_BASE+2
   101             00007F23   VIA_PROP_DDRA	EQU VIA_PROP_BASE+3
   102             00007F24   VIA_PROP_T1CLO	EQU VIA_PROP_BASE+4
   103             00007F25   VIA_PROP_T1CHI	EQU VIA_PROP_BASE+5
   104             00007F26   VIA_PROP_T1LLO	EQU VIA_PROP_BASE+6
   105             00007F27   VIA_PROP_T1LHI	EQU VIA_PROP_BASE+7
   106             00007F28   VIA_PROP_T2CLO	EQU VIA_PROP_BASE+8
   107             00007F29   VIA_PROP_T2CHI	EQU VIA_PROP_BASE+9
   108             00007F2A   VIA_PROP_SR		EQU VIA_PROP_BASE+10
   109             00007F2B   VIA_PROP_ACR	EQU VIA_PROP_BASE+11
   110             00007F2C   VIA_PROP_PCR	EQU VIA_PROP_BASE+12
   111             00007F2D   VIA_PROP_IFR	EQU VIA_PROP_BASE+13
   112             00007F2E   VIA_PROP_IER	EQU VIA_PROP_BASE+14
   113             00007F2F   VIA_PROP_ORANH	EQU VIA_PROP_BASE+15
   114             00007F2F   VIA_PROP_IRANH	EQU VIA_PROP_BASE+15
   115                        
   116             00007FA0   PIA_BASE		EQU $7FA0		; base a
                    ddress of PIA port on SXB
   117             00007FA0   PIA_ORA			EQU PIA_BASE
   118             00007FA0   PIA_IRA			EQU PIA_BASE
   119             00007FA0   PIA_DDRA		EQU PIA_BASE
   120             00007FA1   PIA_CTRLA		EQU PIA_BASE+1
   121             00007FA2   PIA_ORB			EQU PIA_BASE+2
   122             00007FA2   PIA_IRB			EQU PIA_BASE+2
   123             00007FA2   PIA_DDRB		EQU PIA_BASE+2
   124             00007FA3   PIA_CTRLB		EQU PIA_BASE+3
   125                        
   126             00000000   VGA_BASE		EQU $00		; "base address"
                     of VGA, this address is sent to the propeller
   127             00000000   VGA_PRINT		EQU VGA_BASE
   128             00000001   VGA_COL			EQU VGA_BASE+$01
   129             00000002   VGA_ROW			EQU VGA_BASE+$02
   130             00000003   VGA_ROW_COLOR	EQU VGA_BASE+$03
   131             00000004   VGA_ROW_BACK	EQU VGA_BASE+$04
   132             00000005   VGA_AUTO_INC	EQU VGA_BASE+$05
   133             00000006   VGA_FILL_CHAR	EQU VGA_BASE+$06
   134             00000007   VGA_FILL_COL	EQU VGA_BASE+$07
   135             00000008   VGA_FILL_BACK	EQU VGA_BASE+$08
   136             00000009   VGA_SCROLL_UP	EQU VGA_BASE+$09
   137             0000000A   VGA_SCROLL_DN	EQU VGA_BASE+$0A
   138                        
   139             00000010   VGA_CUR1_X		EQU VGA_BASE+$10
   140             00000011   VGA_CUR1_Y		EQU VGA_BASE+$11
   141             00000012   VGA_CUR1_MODE	EQU VGA_BASE+$12
   142             00000013   VGA_CUR2_X		EQU VGA_BASE+$13
   143             00000014   VGA_CUR2_Y		EQU VGA_BASE+$14
  Sun Jan 31 2016  1:45                                                Page 4

    "VGA VGA.asm"
    

   144             00000015   VGA_CUR2_MODE	EQU VGA_BASE+$15
   145                        
   146             00000020   SID_BASE		EQU $20		; "base address"
                     of SID emulation, this address is sent to the propeller
   147             00000020   SID_FR1LO		EQU SID_BASE
   148             00000021   SID_FR1HI		EQU SID_BASE+$01
   149             00000022   SID_PW1LO		EQU SID_BASE+$02
   150             00000023   SID_PW1HI		EQU SID_BASE+$03
   151             00000024   SID_CR1			EQU SID_BASE+$04
   152             00000025   SID_AD1			EQU SID_BASE+$05
   153             00000026   SID_SR1			EQU SID_BASE+$06
   154                        
   155             00000027   SID_FR2LO		EQU SID_BASE+$07
   156             00000028   SID_FR2HI		EQU SID_BASE+$08
   157             00000029   SID_PW2LO		EQU SID_BASE+$09
   158             0000002A   SID_PW2HI		EQU SID_BASE+$0A
   159             0000002B   SID_CR2			EQU SID_BASE+$0B
   160             0000002C   SID_AD2			EQU SID_BASE+$0C
   161             0000002D   SID_SR2			EQU SID_BASE+$0D
   162                        
   163             0000002E   SID_FR3LO		EQU SID_BASE+$0E
   164             0000002F   SID_FR3HI		EQU SID_BASE+$0F
   165             00000030   SID_PW3LO		EQU SID_BASE+$10
   166             00000031   SID_PW3HI		EQU SID_BASE+$11
   167             00000032   SID_CR3			EQU SID_BASE+$12
   168             00000033   SID_AD3			EQU SID_BASE+$13
   169             00000034   SID_SR3			EQU SID_BASE+$14
   170                        
   171             00000035   SID_FCLO		EQU SID_BASE+$15
   172             00000036   SID_FCHI		EQU SID_BASE+$16
   173             00000037   SID_RESFIL		EQU SID_BASE+$17
   174             00000038   SID_MODVOL		EQU SID_BASE+$18
   175                        
   176                        ; Crazy idea for future project...
   177                        ; Include 3 other SID Cogs to emulate 4 sids.
   178                        ; Output induvudual channels so you can pan left/r
                    ight and mix separately.
   179                        ; EQU SID_BASE+$19 to select sid chip, don't have 
                    room for all addresses.
   180                        
   181                        
   182             00000041   NOTE1_ON		EQU $41	; Square
   183             00000040   NOTE1_OFF		EQU $40
   184             00000081   NOTE2_ON		EQU $81 ; Noise
   185             00000080   NOTE2_OFF		EQU $80
   186             00000021   NOTE3_ON		EQU $21 ; Sawtooth
   187             00000020   NOTE3_OFF		EQU $20
   188                        
   189                        
   190                        ; Zero Page stuff
   191                        
   192                        ; String Pointers
   193             00000040   StringLo		EQU $40 ; Low pointer
   194             00000041   StringHi		EQU $41 ; High pointer
   195                        ; Music Pointers
  Sun Jan 31 2016  1:45                                                Page 5

    "VGA VGA.asm"
    

   196             00000042   MusicLo			EQU	$42 ; Low Music 
                    Pointer
   197             00000043   MusicHi			EQU	$43 ; High Music
                     Pointer
   198             00000044   NoteLo			EQU $44 ; Value of the n
                    ote in the SID
   199             00000045   NoteHi			EQU $45
   200             00000046   Temp_Color		EQU $46 ; Color rotation
                     helpers
   201             00000047   Current_Color	EQU $47
   202                        
   203                        ; Temp Storage
   204             00000060   Temp			EQU $60 ; Temp storage
   205                        
   206                        	CHIP 65C02
   207                        	LONGI OFF
   208                        	LONGA OFF
   209                        
   210                        	.STTL "VGA"
   211                        	.PAGE
   212                        				ORG $0200
  Sun Jan 31 2016  1:45                                                Page 6

    "VGA VGA.asm"
    "VGA"

   213                        START
   214                        				
   215 00:0200: A9 FF        				LDA #$FF		
                    		; Make all output
   216 00:0202: 8D 23 7F     				STA VIA_PROP_DDRA
   217 00:0205: A9 7F        				LDA #$7F
   218 00:0207: 8D 22 7F     				STA VIA_PROP_DDRB	
                    	; Bit 0-7 output, bit 8 input
   219                        
   220 00:020A: A9 xx        				LDA #<MusicData     	
                    ; Reset Music Pointers.
   221 00:020C: 85 42        				STA MusicLo
   222 00:020E: A9 xx        				LDA #>MusicData
   223 00:0210: 85 43        				STA MusicHi
   224                        				
   225 00:0212: A9 20        				LDA #$20		
                    		; Blank Screen
   226 00:0214: A2 06        				LDX #VGA_FILL_CHAR
   227 00:0216: 20 BF 04     				JSR writeToPropeller
   228                        				
   229 00:0219: A9 00        				LDA #00			
                    		; Red
   230 00:021B: A2 03        				LDX #03			
                    		; Green
   231 00:021D: A0 00        				LDY #00			
                    		; Blue
   232 00:021F: 20 FD 04     				JSR calc_rgb
   233 00:0222: A2 07        				LDX #VGA_FILL_COL	
                    	; Yello Text
   234 00:0224: 20 BF 04     				JSR writeToPropeller	
   235                        
   236 00:0227: A9 00        				LDA #00			
                    		; Red
   237 00:0229: A2 00        				LDX #00			
                    		; Green
   238 00:022B: A0 00        				LDY #00			
                    		; Blue
   239 00:022D: 20 FD 04     				JSR calc_rgb
   240 00:0230: A2 08        				LDX #VGA_FILL_BACK	
                    	; Blue background
   241 00:0232: 20 BF 04     				JSR writeToPropeller	
                    				
   242                        				
   243 00:0235: A9 01        				LDA #$1			
                    		; Print with one char at the time
   244 00:0237: A2 05        				LDX #VGA_AUTO_INC
   245 00:0239: 20 BF 04     				JSR writeToPropeller
   246                        
   247 00:023C: A2 1E        				LDX	#30		
                    			; Print String
   248 00:023E: A0 00        				LDY #0
   249 00:0240: A9 xx        				LDA #<String1     	
                    	; Load String Pointers.
   250 00:0242: 85 40        				STA StringLo
   251 00:0244: A9 xx        				LDA #>String1
  Sun Jan 31 2016  1:45                                                Page 7

    "VGA VGA.asm"
    "VGA"

   252 00:0246: 85 41        				STA StringHi
   253 00:0248: 20 3B 05     				JSR printStringXY
   254                        				
   255 00:024B: A9 1F        				LDA #$1F
   256 00:024D: A2 38        				LDX #SID_MODVOL		
                    	; Full volumne, Low Pass filter
   257 00:024F: 20 BF 04     				JSR writeToPropeller
   258                        
   259 00:0252: A9 F1        				LDA #$F1
   260 00:0254: A2 37        				LDX #SID_RESFIL		
                    	; Full Resonance, filter 1 enabled.
   261 00:0256: 20 BF 04     				JSR writeToPropeller
   262                        				
   263 00:0259: A9 25        				LDA #$25		
                    		; Attack = 2, Decay = 5, Sustain = 9 and Release
                     = 6 for Channel 1
   264 00:025B: A2 25        				LDX #SID_AD1
   265 00:025D: 20 BF 04     				JSR writeToPropeller
   266 00:0260: A9 96        				LDA #$96
   267 00:0262: A2 26        				LDX #SID_SR1
   268 00:0264: 20 BF 04     				JSR writeToPropeller
   269                        				
   270 00:0267: A9 08        				LDA #$08		
                    		; Attack = 0, Decay = 8, Sustain = 4 and Release
                     = 7 for Channel 2
   271 00:0269: A2 2C        				LDX #SID_AD2
   272 00:026B: 20 BF 04     				JSR writeToPropeller
   273 00:026E: A9 47        				LDA #$47
   274 00:0270: A2 2D        				LDX #SID_SR2
   275 00:0272: 20 BF 04     				JSR writeToPropeller
   276                        				
   277 00:0275: A9 74        				LDA #$74		
                    		; Attack = 7, Decay = 4, Sustain = 8 and Release
                     = 9 for Channel 3
   278 00:0277: A2 33        				LDX #SID_AD3
   279 00:0279: 20 BF 04     				JSR writeToPropeller
   280 00:027C: A9 89        				LDA #$89
   281 00:027E: A2 34        				LDX #SID_SR3
   282 00:0280: 20 BF 04     				JSR writeToPropeller
   283                        				
   284 00:0283: A9 07        				LDA #>1928		
                    		; Pulse Width to 1928 for Channel 1
   285 00:0285: A2 22        				LDX #SID_PW1LO
   286 00:0287: 20 BF 04     				JSR writeToPropeller
   287 00:028A: A9 07        				LDA #>1928
   288 00:028C: A2 23        				LDX #SID_PW1HI
   289 00:028E: 20 BF 04     				JSR writeToPropeller
   290                        				
   291                        				
   292 00:0291: A2 12        				LDX	#18		
                    			; Print 0-64 of char set.
   293 00:0293: A0 03        				LDY #3
   294 00:0295: 20 2F 05     				JSR setXY
   295 00:0298: A9 00        				LDA #0
   296 00:029A: A2 00        				LDX #VGA_PRINT
  Sun Jan 31 2016  1:45                                                Page 8

    "VGA VGA.asm"
    "VGA"

   297 00:029C: 20 BF 04     l1				JSR writeToPropeller
   298 00:029F: 1A           				INC
   299 00:02A0: C9 40        				CMP #64
   300 00:02A2: D0 F8        				BNE l1
   301                        				
   302 00:02A4: A2 12        				LDX	#18		
                    			; Print 65-128 of char set.
   303 00:02A6: A0 04        				LDY #4
   304 00:02A8: 20 2F 05     				JSR setXY
   305 00:02AB: A9 40        				LDA #64
   306 00:02AD: A2 00        				LDX #VGA_PRINT
   307 00:02AF: 20 BF 04     l2				JSR writeToPropeller
   308 00:02B2: 1A           				INC
   309 00:02B3: C9 80        				CMP #128
   310 00:02B5: D0 F8        				BNE l2
   311                        				
   312 00:02B7: A2 12        				LDX	#18		
                    			; Print 129-192 of char set.
   313 00:02B9: A0 05        				LDY #5
   314 00:02BB: 20 2F 05     				JSR setXY
   315 00:02BE: A9 80        				LDA #128
   316 00:02C0: A2 00        				LDX #VGA_PRINT
   317 00:02C2: 20 BF 04     l3				JSR writeToPropeller
   318 00:02C5: 1A           				INC
   319 00:02C6: C9 C0        				CMP #192
   320 00:02C8: D0 F8        				BNE l3
   321                        				
   322 00:02CA: A2 12        				LDX	#18		
                    			; Print 193-255 of char set.
   323 00:02CC: A0 06        				LDY #6
   324 00:02CE: 20 2F 05     				JSR setXY
   325 00:02D1: A9 C0        				LDA #192
   326 00:02D3: A2 00        				LDX #VGA_PRINT
   327 00:02D5: 20 BF 04     l4				JSR writeToPropeller
   328 00:02D8: 1A           				INC
   329 00:02D9: D0 FA        				BNE l4
   330                        				
   331                        
   332 00:02DB: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   333 00:02DD: A0 15        				LDY #21
   334 00:02DF: A9 xx        				LDA #<StringTXT1   	
                    	; Load String Pointers.
   335 00:02E1: 85 40        				STA StringLo
   336 00:02E3: A9 xx        				LDA #>StringTXT1
   337 00:02E5: 85 41        				STA StringHi
   338 00:02E7: 20 3B 05     				JSR printStringXY
   339 00:02EA: A9 00        				LDA #0
   340 00:02EC: A2 03        				LDX #VGA_ROW_COLOR
   341 00:02EE: 20 BF 04     				JSR writeToPropeller
   342                        				
   343 00:02F1: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   344 00:02F3: A0 16        				LDY #22
   345 00:02F5: A9 xx        				LDA #<StringTXT2  	
  Sun Jan 31 2016  1:45                                                Page 9

    "VGA VGA.asm"
    "VGA"

                    	; Load String Pointers.
   346 00:02F7: 85 40        				STA StringLo
   347 00:02F9: A9 xx        				LDA #>StringTXT2
   348 00:02FB: 85 41        				STA StringHi
   349 00:02FD: 20 3B 05     				JSR printStringXY
   350 00:0300: A9 00        				LDA #0
   351 00:0302: A2 03        				LDX #VGA_ROW_COLOR
   352 00:0304: 20 BF 04     				JSR writeToPropeller
   353                        				
   354 00:0307: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   355 00:0309: A0 17        				LDY #23
   356 00:030B: A9 xx        				LDA #<StringTXT3 	
                    	; Load String Pointers.
   357 00:030D: 85 40        				STA StringLo
   358 00:030F: A9 xx        				LDA #>StringTXT3
   359 00:0311: 85 41        				STA StringHi
   360 00:0313: 20 3B 05     				JSR printStringXY
   361 00:0316: A9 00        				LDA #0
   362 00:0318: A2 03        				LDX #VGA_ROW_COLOR
   363 00:031A: 20 BF 04     				JSR writeToPropeller
   364                        				
   365 00:031D: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   366 00:031F: A0 18        				LDY #24
   367 00:0321: A9 xx        				LDA #<StringTXT4 	
                    	; Load String Pointers.
   368 00:0323: 85 40        				STA StringLo
   369 00:0325: A9 xx        				LDA #>StringTXT4
   370 00:0327: 85 41        				STA StringHi
   371 00:0329: 20 3B 05     				JSR printStringXY
   372 00:032C: A9 00        				LDA #0
   373 00:032E: A2 03        				LDX #VGA_ROW_COLOR
   374 00:0330: 20 BF 04     				JSR writeToPropeller
   375                        				
   376 00:0333: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   377 00:0335: A0 19        				LDY #25
   378 00:0337: A9 xx        				LDA #<StringTXT5  	
                    	; Load String Pointers.
   379 00:0339: 85 40        				STA StringLo
   380 00:033B: A9 xx        				LDA #>StringTXT5
   381 00:033D: 85 41        				STA StringHi
   382 00:033F: 20 3B 05     				JSR printStringXY
   383 00:0342: A9 00        				LDA #0
   384 00:0344: A2 03        				LDX #VGA_ROW_COLOR
   385 00:0346: 20 BF 04     				JSR writeToPropeller
   386                        				
   387 00:0349: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   388 00:034B: A0 1A        				LDY #26
   389 00:034D: A9 xx        				LDA #<StringTXT6 	
                    	; Load String Pointers.
   390 00:034F: 85 40        				STA StringLo
   391 00:0351: A9 xx        				LDA #>StringTXT6
  Sun Jan 31 2016  1:45                                                Page 10

    "VGA VGA.asm"
    "VGA"

   392 00:0353: 85 41        				STA StringHi
   393 00:0355: 20 3B 05     				JSR printStringXY
   394 00:0358: A9 00        				LDA #0
   395 00:035A: A2 03        				LDX #VGA_ROW_COLOR
   396 00:035C: 20 BF 04     				JSR writeToPropeller
   397                        				
   398 00:035F: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   399 00:0361: A0 1B        				LDY #27
   400 00:0363: A9 xx        				LDA #<StringTXT7	
                    	; Load String Pointers.
   401 00:0365: 85 40        				STA StringLo
   402 00:0367: A9 xx        				LDA #>StringTXT7
   403 00:0369: 85 41        				STA StringHi
   404 00:036B: 20 3B 05     				JSR printStringXY
   405 00:036E: A9 00        				LDA #0
   406 00:0370: A2 03        				LDX #VGA_ROW_COLOR
   407 00:0372: 20 BF 04     				JSR writeToPropeller
   408                        				
   409 00:0375: A2 04        				LDX	#4		
                    			; Print String "64 Colors"
   410 00:0377: A0 1C        				LDY #28
   411 00:0379: A9 xx        				LDA #<StringTXT8	
                    	; Load String Pointers.
   412 00:037B: 85 40        				STA StringLo
   413 00:037D: A9 xx        				LDA #>StringTXT8
   414 00:037F: 85 41        				STA StringHi
   415 00:0381: 20 3B 05     				JSR printStringXY
   416 00:0384: A9 00        				LDA #0
   417 00:0386: A2 03        				LDX #VGA_ROW_COLOR
   418 00:0388: 20 BF 04     				JSR writeToPropeller
   419                        				
   420 00:038B: 64 47        				STZ Current_Color	
                    	; Zero color rotation
   421                        				
   422                        mainLoop			  
   423                        			  
   424 00:038D: A2 22        				LDX	#34		
                    			; Location for tracker data
   425 00:038F: A0 01        				LDY #1
   426 00:0391: 20 2F 05     				JSR setXY
   427                        				
   428                        				; Channel 1
   429 00:0394: A0 00        				LDY #0
   430 00:0396: B1 42        				LDA (MusicLo),Y
   431 00:0398: 85 60        				STA Temp
   432 00:039A: 85 44        				STA NoteLo
   433 00:039C: C8           				INY
   434 00:039D: B1 42        				LDA (MusicLo),Y
   435 00:039F: 85 45        				STA NoteHi
   436 00:03A1: C8           				INY
   437 00:03A2: 20 16 05     				JSR printHex		
                    	; Print values for Channel 1
   438 00:03A5: A5 60        				LDA Temp
   439 00:03A7: 20 16 05     				JSR printHex
  Sun Jan 31 2016  1:45                                                Page 11

    "VGA VGA.asm"
    "VGA"

   440 00:03AA: A9 20        				LDA #$20		
                    		; Couple of spaces..
   441 00:03AC: A2 00        				LDX #VGA_PRINT
   442 00:03AE: 20 BF 04     				JSR writeToPropeller
   443 00:03B1: 20 BF 04     				JSR writeToPropeller
   444                        				
   445 00:03B4: A5 44        				LDA NoteLo		
                    		; Get Note
   446 00:03B6: F0 15        				BEQ doNote1_off		
                    	; Note off ?
   447 00:03B8: A2 20        				LDX #SID_FR1LO		
                    	; Write low Frequency to SID
   448 00:03BA: 20 BF 04     				JSR writeToPropeller
   449                        				
   450 00:03BD: A5 45        				LDA NoteHi
   451 00:03BF: A2 21        				LDX #SID_FR1HI		
                    	; Write low Frequency to SID
   452 00:03C1: 20 BF 04     				JSR writeToPropeller
   453                        				
   454 00:03C4: A9 41        				LDA #NOTE1_ON		
                    	; Play note
   455 00:03C6: A2 24        				LDX #SID_CR1
   456 00:03C8: 20 BF 04     				JSR writeToPropeller
   457 00:03CB: 80 07        				BRA doChannel2
   458                        				
   459 00:03CD: A9 40        doNote1_off		LDA #NOTE1_OFF		
                    	; Flag note off
   460 00:03CF: A2 24        				LDX #SID_CR1
   461 00:03D1: 20 BF 04     				JSR writeToPropeller
   462                        				
   463                        				
   464                        doChannel2		
   465                        				; Channel 2
   466 00:03D4: B1 42        				LDA (MusicLo),Y
   467 00:03D6: 85 60        				STA Temp
   468 00:03D8: 85 44        				STA NoteLo
   469 00:03DA: C8           				INY
   470 00:03DB: B1 42        				LDA (MusicLo),Y
   471 00:03DD: 85 45        				STA NoteHi
   472 00:03DF: C8           				INY
   473 00:03E0: 20 16 05     				JSR printHex		
                    	; Print values for Channel 2
   474 00:03E3: A5 60        				LDA Temp
   475 00:03E5: 20 16 05     				JSR printHex
   476 00:03E8: A9 20        				LDA #$20		
                    		; Couple of spaces..
   477 00:03EA: A2 00        				LDX #VGA_PRINT
   478 00:03EC: 20 BF 04     				JSR writeToPropeller
   479 00:03EF: 20 BF 04     				JSR writeToPropeller
   480                        
   481 00:03F2: A5 44        				LDA NoteLo
   482 00:03F4: F0 15        				BEQ doNote2_off
   483 00:03F6: A2 27        				LDX #SID_FR2LO
   484 00:03F8: 20 BF 04     				JSR writeToPropeller
   485                        				
  Sun Jan 31 2016  1:45                                                Page 12

    "VGA VGA.asm"
    "VGA"

   486 00:03FB: A5 45        				LDA NoteHi
   487 00:03FD: A2 28        				LDX #SID_FR2HI
   488 00:03FF: 20 BF 04     				JSR writeToPropeller
   489                        				
   490 00:0402: A9 81        				LDA #NOTE2_ON
   491 00:0404: A2 2B        				LDX #SID_CR2
   492 00:0406: 20 BF 04     				JSR writeToPropeller
   493 00:0409: 80 07        				BRA doChannel3
   494                        				
   495 00:040B: A9 80        doNote2_off		LDA #NOTE2_OFF
   496 00:040D: A2 2B        				LDX #SID_CR2
   497 00:040F: 20 BF 04     				JSR writeToPropeller	
                    			
   498                        				
   499                        doChannel3
   500                        				; Channel 3
   501 00:0412: B1 42        				LDA (MusicLo),Y
   502 00:0414: 85 60        				STA Temp
   503 00:0416: 85 44        				STA NoteLo
   504 00:0418: C8           				INY
   505 00:0419: B1 42        				LDA (MusicLo),Y
   506 00:041B: 85 45        				STA NoteHi
   507 00:041D: C8           				INY
   508 00:041E: 20 16 05     				JSR printHex		
                    	; Print values for Channel 3
   509 00:0421: A5 60        				LDA Temp
   510 00:0423: 20 16 05     				JSR printHex
   511 00:0426: A9 20        				LDA #$20		
                    		; Couple of spaces..
   512 00:0428: A2 00        				LDX #VGA_PRINT
   513 00:042A: 20 BF 04     				JSR writeToPropeller
   514 00:042D: 20 BF 04     				JSR writeToPropeller
   515                        				
   516 00:0430: A5 44        				LDA NoteLo
   517 00:0432: F0 15        				BEQ doNote3_off
   518 00:0434: A2 2E        				LDX #SID_FR3LO
   519 00:0436: 20 BF 04     				JSR writeToPropeller
   520                        				
   521 00:0439: A5 45        				LDA NoteHi
   522 00:043B: A2 2F        				LDX #SID_FR3HI
   523 00:043D: 20 BF 04     				JSR writeToPropeller
   524                        				
   525 00:0440: A9 21        				LDA #NOTE3_ON
   526 00:0442: A2 32        				LDX #SID_CR3
   527 00:0444: 20 BF 04     				JSR writeToPropeller
   528 00:0447: 80 07        				BRA doCutOff
   529                        				
   530 00:0449: A9 20        doNote3_off		LDA #NOTE3_OFF
   531 00:044B: A2 32        				LDX #SID_CR3
   532 00:044D: 20 BF 04     				JSR writeToPropeller	
                    				
   533                        
   534                        doCutOff
   535                        				; Cutoff
   536 00:0450: B1 42        				LDA (MusicLo),Y
  Sun Jan 31 2016  1:45                                                Page 13

    "VGA VGA.asm"
    "VGA"

   537 00:0452: 85 60        				STA Temp
   538 00:0454: 85 44        				STA NoteLo
   539 00:0456: C8           				INY
   540 00:0457: B1 42        				LDA (MusicLo),Y
   541 00:0459: 85 45        				STA NoteHi
   542 00:045B: C8           				INY
   543 00:045C: 20 16 05     				JSR printHex		
                    	; Print values for Cutoff
   544 00:045F: A5 60        				LDA Temp
   545 00:0461: 20 16 05     				JSR printHex
   546                        				
   547 00:0464: A5 44        				LDA NoteLo		
                    		; Low value anded by 7 to mask bits
   548 00:0466: 29 07        				AND #7
   549 00:0468: A6 35        				LDX SID_FCLO		
                    	; Low cutoff frequency. It's only three bits...
   550 00:046A: 20 BF 04     				JSR writeToPropeller
   551                        
   552 00:046D: 66 45        				ROR NoteHi		
                    		; Shift three times to get rid of Low bits.
   553 00:046F: 66 44        				ROR NoteLo		
                    		; We now have a value between 0 and 255.
   554 00:0471: 66 45        				ROR NoteHi
   555 00:0473: 66 44        				ROR NoteLo
   556 00:0475: 66 45        				ROR NoteHi
   557 00:0477: 66 44        				ROR NoteLo
   558                        
   559 00:0479: A5 44        				LDA NoteLo		
                    		; High cutoff frequency.
   560 00:047B: A6 35        				LDX SID_FCLO
   561 00:047D: 20 BF 04     				JSR writeToPropeller
   562                        				
   563                        setNextNotes				
   564 00:0480: A5 42        				LDA MusicLo		
                    		; Add 8 bytes to point to next note.
   565 00:0482: 18           				CLC
   566 00:0483: 69 08        				ADC #8
   567 00:0485: 85 42        				STA MusicLo
   568 00:0487: A5 43        				LDA MusicHi
   569 00:0489: 69 00        				ADC #0
   570 00:048B: 85 43        				STA MusicHi
   571                        				
   572 00:048D: B2 42        				LDA (MusicLo)		
                    	; Do we need to reset ?
   573 00:048F: 1A           				INC			
                    			; If current note is 255, reset. Load cu
                    rrent note, increase it and test for zero.
   574 00:0490: D0 08        				BNE noMusicReset
   575 00:0492: A9 xx        				LDA #<MusicData     	
                    ; Reset Music Pointers.
   576 00:0494: 85 42        				STA MusicLo
   577 00:0496: A9 xx        				LDA #>MusicData
   578 00:0498: 85 43        				STA MusicHi
   579                        
   580                        noMusicReset				
  Sun Jan 31 2016  1:45                                                Page 14

    "VGA VGA.asm"
    "VGA"

   581                        
   582 00:049A: A5 47        				LDA Current_Color	
                    	; Get current color
   583 00:049C: 85 46        				STA Temp_Color		
                    	; Store in Temp
   584 00:049E: E6 47        				INC Current_Color	
                    	; Next color in rotation.
   585 00:04A0: A0 0A        				LDY #10			
                    		; Start on row 10
   586                        colorLoop
   587 00:04A2: 98           				TYA			
                    			; Set Row
   588 00:04A3: A2 02        				LDX #VGA_ROW
   589 00:04A5: 20 BF 04     				JSR writeToPropeller
   590 00:04A8: A5 46        				LDA Temp_Color		
                    	; Get temp color
   591 00:04AA: 0A           				ASL			
                    			; Shift up two bits, lower 2 bits not us
                    ed in color.
   592 00:04AB: 0A           				ASL
   593 00:04AC: A2 04        				LDX #VGA_ROW_BACK	
                    	; Set background color.
   594 00:04AE: 20 BF 04     				JSR writeToPropeller
   595 00:04B1: E6 46        				INC Temp_Color		
                    	; Rotate.
   596 00:04B3: C8           				INY			
                    			; Next row.
   597 00:04B4: 98           				TYA
   598 00:04B5: C9 32        				CMP #50			
                    		; Done ?
   599 00:04B7: D0 E9        				BNE colorLoop
   600                        				
   601 00:04B9: 20 DD 04     				JSR delay		
                    		; Wait for it...
   602 00:04BC: 4C 8D 03     				JMP mainLoop		
                    	; Repeat forever....
   603                        
   604                        ;-------------------------------------------------
                    ------------------------
   605                        ; writeToPropeller, A is data, X is Address
   606                        ;-------------------------------------------------
                    ------------------------
   607                        
   608                        writeToPropeller
   609 00:04BF: 48           				PHA			
                    	; Save A
   610 00:04C0: 48           				PHA			
                    	; Save A Again
   611 00:04C1: AD 20 7F     tstBusy			LDA	VIA_PROP_IRB	
                    	; Read Output.
   612 00:04C4: 30 FB        				BMI	tstBusy		
                    ; Wait for Propeller to finish, high bit will be low when do
                    ne.
   613 00:04C6: 68           				PLA			
                    	; Restore A
  Sun Jan 31 2016  1:45                                                Page 15

    "VGA VGA.asm"
    "VGA"

   614 00:04C7: 8D 21 7F     				STA	VIA_PROP_ORA
   615 00:04CA: 8A           				TXA
   616 00:04CB: 09 40        				ORA #$40		
                    ; Set Write Flag.
   617 00:04CD: 8D 20 7F     				STA VIA_PROP_ORB	
                    	; Send data.
   618 00:04D0: AD 20 7F     tstBusy2		LDA	VIA_PROP_ORB		
                    ; Read Output.
   619 00:04D3: 10 FB        				BPL	tstBusy2	
                    ; Wait for Propeller to be busy, high bit will be high when 
                    busy
   620 00:04D5: 8A           				TXA
   621 00:04D6: 29 3F        				AND #$3F		
                    ; Clear Write Flag.
   622 00:04D8: 8D 20 7F     				STA VIA_PROP_ORB	
                    	; Flag it.
   623                        				
   624 00:04DB: 68           				PLA			
                    	; Restore A
   625 00:04DC: 60           				RTS
   626                        				
   627                        ;-------------------------------------------------
                    ------------------------
   628                        ; delay: delay to see changes on screen.
   629                        ;-------------------------------------------------
                    ------------------------
   630                        
   631 00:04DD: A9 01        delay			LDA #$01
   632 00:04DF: A0 00        				LDY #$00            ; Lo
                    op 16*256*256 times...
   633 00:04E1: A2 00        				LDX #$00
   634 00:04E3: CA           dloop1			DEX
   635 00:04E4: D0 FD        				BNE dloop1
   636 00:04E6: 88           				DEY
   637 00:04E7: D0 FA        				BNE dloop1
   638 00:04E9: 3A           				DEC
   639 00:04EA: D0 F7        				BNE dloop1
   640 00:04EC: 60           				RTS
   641                        
   642                        ;-------------------------------------------------
                    ------------------------
   643                        ; delay: delay to see changes on screen.
   644                        ;-------------------------------------------------
                    ------------------------
   645                        
   646 00:04ED: A9 01        delay2			LDA #$01
   647 00:04EF: A0 40        				LDY #$40            ; Lo
                    op 16*256*256 times...
   648 00:04F1: A2 00        				LDX #$00
   649 00:04F3: CA           dloop2			DEX
   650 00:04F4: D0 FD        				BNE dloop2
   651 00:04F6: 88           				DEY
   652 00:04F7: D0 FA        				BNE dloop2
   653 00:04F9: 3A           				DEC
   654 00:04FA: D0 F7        				BNE dloop2
  Sun Jan 31 2016  1:45                                                Page 16

    "VGA VGA.asm"
    "VGA"

   655 00:04FC: 60           				RTS			
                    	
   656                        				
   657                        ;-------------------------------------------------
                    ------------------------
   658                        ; calc_rgb: A = R, X = G, Y = B values between 0 a
                    nd 3
   659                        ; Resulting byte is RRGGBB00 each two bit values.
   660                        ;-------------------------------------------------
                    ------------------------
   661                        
   662 00:04FD: 2A           calc_rgb		ROL				
                    ; Shift Red 6 bits
   663 00:04FE: 2A           				ROL
   664 00:04FF: 2A           				ROL
   665 00:0500: 2A           				ROL
   666 00:0501: 2A           				ROL
   667 00:0502: 2A           				ROL
   668 00:0503: 85 60        				STA Temp		
                    ; Store in Temp
   669 00:0505: 8A           				TXA			
                    	; X to A and shift Green 4 bits
   670 00:0506: 2A           				ROL
   671 00:0507: 2A           				ROL
   672 00:0508: 2A           				ROL
   673 00:0509: 2A           				ROL
   674 00:050A: 18           				CLC
   675 00:050B: 65 60        				ADC Temp		
                    ; Add with Temp
   676 00:050D: 85 60        				STA Temp		
                    ; Store in Temp
   677 00:050F: 98           				TYA			
                    	; Y to A and shift Blue 2 bits
   678 00:0510: 2A           				ROL
   679 00:0511: 2A           				ROL
   680 00:0512: 18           				CLC
   681 00:0513: 65 60        				ADC Temp		
                    ; Add with Temp
   682 00:0515: 60           				RTS
   683                        
   684                        ;-------------------------------------------------
                    ------------------------
   685                        ; printHex: Print a HEX value, the Woz way...
   686                        ;-------------------------------------------------
                    ------------------------
   687                        
   688                        printHex
   689 00:0516: 48           				PHA			
                    	; Save A for LSD
   690 00:0517: 4A           				LSR
   691 00:0518: 4A           				LSR
   692 00:0519: 4A           				LSR			
                    	; MSD to LSD position
   693 00:051A: 4A           				LSR
   694 00:051B: 20 1F 05     				JSR PRHEX		
  Sun Jan 31 2016  1:45                                                Page 17

    "VGA VGA.asm"
    "VGA"

                    ; Output hex digit 
   695 00:051E: 68           				PLA			
                    	; Restore A
   696 00:051F: 29 0F        PRHEX			AND #%00001111	; Mask L
                    SD for hex print			  
   697 00:0521: 09 30        				ORA #"0"		
                    ; Add "0"
   698 00:0523: C9 3A        				CMP #"9"+1		
                    ; Is it a decimal digit ?
   699 00:0525: 90 02        				BCC ECHO		
                    ; Yes Output it
   700 00:0527: 69 06        				ADC #6			
                    ; Add offset for letter A-F
   701 00:0529: A2 00        ECHO			LDX #VGA_PRINT	; Print
   702 00:052B: 20 BF 04     				JSR writeToPropeller	
                    ; Print it...
   703 00:052E: 60           				RTS
   704                        
   705                        
   706                        ;-------------------------------------------------
                    ------------------------
   707                        ; setXY: Set XY from X and Y register.
   708                        ;-------------------------------------------------
                    ------------------------
   709                        
   710                        setXY
   711 00:052F: 8A           				TXA
   712 00:0530: A2 01        				LDX #VGA_COL
   713 00:0532: 20 BF 04     				JSR writeToPropeller
   714 00:0535: 98           				TYA
   715 00:0536: A2 02        				LDX #VGA_ROW
   716 00:0538: 4C BF 04     				JMP writeToPropeller
   717                        			  
   718                        ;-------------------------------------------------
                    ------------------------
   719                        ; printStringXY: Print a string preloaded in Strin
                    gLo at XY from X and Y register.
   720                        ;-------------------------------------------------
                    ------------------------
   721                        
   722                        printStringXY
   723 00:053B: 8A           				TXA
   724 00:053C: A2 01        				LDX #VGA_COL
   725 00:053E: 20 BF 04     				JSR writeToPropeller
   726 00:0541: 98           				TYA
   727 00:0542: A2 02        				LDX #VGA_ROW
   728 00:0544: 20 BF 04     				JSR writeToPropeller
   729                        
   730                        ;-------------------------------------------------
                    ------------------------
   731                        ; printString: Print a string preloaded in StringL
                    o
   732                        ;-------------------------------------------------
                    ------------------------
   733                        
  Sun Jan 31 2016  1:45                                                Page 18

    "VGA VGA.asm"
    "VGA"

   734                        printString
   735 00:0547: A0 00        				LDY #0
   736 00:0549: B1 40        nextChar		LDA (StringLo),Y	; Get ch
                    aracter
   737 00:054B: F0 08        				BEQ done_Printing	
                    ; Zero, we done...
   738 00:054D: A2 00        				LDX #VGA_PRINT		
                    ; Print
   739 00:054F: 20 BF 04     				JSR writeToPropeller
   740 00:0552: C8           				INY			
                    		; Next, cannot print more than 254 bytes or we w
                    rap around in an infinite loop.
   741 00:0553: 80 F4        				BRA nextChar		
                    ; Continue
   742 00:0555: 60           done_Printing	RTS
   743                        
   744                        ;-------------------------------------------------
                    ------------------------
   745                        ; FUNCTION NAME	: Event Hander re-vectors
   746                        ;-------------------------------------------------
                    ------------------------
   747                        IRQHandler:
   748 00:0556: 48           				PHA
   749 00:0557: 68           				PLA
   750 00:0558: 40           				RTI
   751                        
   752                        badVec			; $FFE0 - IRQRVD2(134)
   753 00:0559: 08           				PHP
   754 00:055A: 48           				PHA
   755 00:055B: A9 FF        				LDA #$FF
   756                        				;clear Irq
   757 00:055D: 68           				PLA
   758 00:055E: 28           				PLP
   759 00:055F: 40           				RTI
   760                        
   761                        	DATA
   762                        
   763                        String1
   764 00:0000: 57 36 35 43  				BYTE	"W65CSXB VGA and
                     SID system...", $00 ; 1
       00:0004: 53 58 42 20 
       00:0008: 56 47 41 20 
       00:000C: 61 6E 64 20 
       00:0010: 53 49 44 20 
       00:0014: 73 79 73 74 
       00:0018: 65 6D 2E 2E 
       00:001C: 2E 00 
   765                        
   766 00:001E: 20 2E 64 38  StringTXT1		BYTE	" .d8888b.      d8888   
                         .d8888b.   .d88888b.  888      .d88888b.  8888888b.   .
                    d8888b.  ", 0
       00:0022: 38 38 38 62 
       00:0026: 2E 20 20 20 
       00:002A: 20 20 20 64 
       00:002E: 38 38 38 38 
  Sun Jan 31 2016  1:45                                                Page 19

    "VGA VGA.asm"
    "VGA"

       00:0032: 20 20 20 20 
       00:0036: 20 20 20 20 
       00:003A: 2E 64 38 38 
       00:003E: 38 38 62 2E 
       00:0042: 20 20 20 2E 
       00:0046: 64 38 38 38 
       00:004A: 38 38 62 2E 
       00:004E: 20 20 38 38 
       00:0052: 38 20 20 20 
       00:0056: 20 20 20 2E 
       00:005A: 64 38 38 38 
       00:005E: 38 38 62 2E 
       00:0062: 20 20 38 38 
       00:0066: 38 38 38 38 
       00:006A: 38 62 2E 20 
       00:006E: 20 20 2E 64 
       00:0072: 38 38 38 38 
       00:0076: 62 2E 20 20 
       00:007A: 00 
   767 00:007B: 64 38 38 50  StringTXT2		BYTE	"d88P  Y88b    d8P888   
                        d88P  Y88b d88P' 'Y88b 888     d88P' 'Y88b 888   Y88b d8
                    8P  Y88b ", 0
       00:007F: 20 20 59 38 
       00:0083: 38 62 20 20 
       00:0087: 20 20 64 38 
       00:008B: 50 38 38 38 
       00:008F: 20 20 20 20 
       00:0093: 20 20 20 64 
       00:0097: 38 38 50 20 
       00:009B: 20 59 38 38 
       00:009F: 62 20 64 38 
       00:00A3: 38 50 27 20 
       00:00A7: 27 59 38 38 
       00:00AB: 62 20 38 38 
       00:00AF: 38 20 20 20 
       00:00B3: 20 20 64 38 
       00:00B7: 38 50 27 20 
       00:00BB: 27 59 38 38 
       00:00BF: 62 20 38 38 
       00:00C3: 38 20 20 20 
       00:00C7: 59 38 38 62 
       00:00CB: 20 64 38 38 
       00:00CF: 50 20 20 59 
       00:00D3: 38 38 62 20 
       00:00D7: 00 
   768 00:00D8: 38 38 38 20  StringTXT3		BYTE	"888          d8P 888   
                        888    888 888     888 888     888     888 888    888 Y8
                    8b.      ", 0
       00:00DC: 20 20 20 20 
       00:00E0: 20 20 20 20 
       00:00E4: 20 64 38 50 
       00:00E8: 20 38 38 38 
       00:00EC: 20 20 20 20 
       00:00F0: 20 20 20 38 
       00:00F4: 38 38 20 20 
  Sun Jan 31 2016  1:45                                                Page 20

    "VGA VGA.asm"
    "VGA"

       00:00F8: 20 20 38 38 
       00:00FC: 38 20 38 38 
       00:0100: 38 20 20 20 
       00:0104: 20 20 38 38 
       00:0108: 38 20 38 38 
       00:010C: 38 20 20 20 
       00:0110: 20 20 38 38 
       00:0114: 38 20 20 20 
       00:0118: 20 20 38 38 
       00:011C: 38 20 38 38 
       00:0120: 38 20 20 20 
       00:0124: 20 38 38 38 
       00:0128: 20 59 38 38 
       00:012C: 62 2E 20 20 
       00:0130: 20 20 20 20 
       00:0134: 00 
   769 00:0135: 38 38 38 64  StringTXT4		BYTE	"888d888b.   d8P  888   
                        888        888     888 888     888     888 888   d88P  '
                    Y888b.   ", 0
       00:0139: 38 38 38 62 
       00:013D: 2E 20 20 20 
       00:0141: 64 38 50 20 
       00:0145: 20 38 38 38 
       00:0149: 20 20 20 20 
       00:014D: 20 20 20 38 
       00:0151: 38 38 20 20 
       00:0155: 20 20 20 20 
       00:0159: 20 20 38 38 
       00:015D: 38 20 20 20 
       00:0161: 20 20 38 38 
       00:0165: 38 20 38 38 
       00:0169: 38 20 20 20 
       00:016D: 20 20 38 38 
       00:0171: 38 20 20 20 
       00:0175: 20 20 38 38 
       00:0179: 38 20 38 38 
       00:017D: 38 20 20 20 
       00:0181: 64 38 38 50 
       00:0185: 20 20 27 59 
       00:0189: 38 38 38 62 
       00:018D: 2E 20 20 20 
       00:0191: 00 
   770 00:0192: 38 38 38 50  StringTXT5		BYTE	"888P 'Y88b d88   888   
                        888        888     888 888     888     888 8888888P'    
                      'Y88b. ", 0
       00:0196: 20 27 59 38 
       00:019A: 38 62 20 64 
       00:019E: 38 38 20 20 
       00:01A2: 20 38 38 38 
       00:01A6: 20 20 20 20 
       00:01AA: 20 20 20 38 
       00:01AE: 38 38 20 20 
       00:01B2: 20 20 20 20 
       00:01B6: 20 20 38 38 
       00:01BA: 38 20 20 20 
  Sun Jan 31 2016  1:45                                                Page 21

    "VGA VGA.asm"
    "VGA"

       00:01BE: 20 20 38 38 
       00:01C2: 38 20 38 38 
       00:01C6: 38 20 20 20 
       00:01CA: 20 20 38 38 
       00:01CE: 38 20 20 20 
       00:01D2: 20 20 38 38 
       00:01D6: 38 20 38 38 
       00:01DA: 38 38 38 38 
       00:01DE: 38 50 27 20 
       00:01E2: 20 20 20 20 
       00:01E6: 20 27 59 38 
       00:01EA: 38 62 2E 20 
       00:01EE: 00 
   771 00:01EF: 38 38 38 20  StringTXT6		BYTE	"888    888 8888888888  
                        888    888 888     888 888     888     888 888 T88b     
                        '888 ", 0
       00:01F3: 20 20 20 38 
       00:01F7: 38 38 20 38 
       00:01FB: 38 38 38 38 
       00:01FF: 38 38 38 38 
       00:0203: 38 20 20 20 
       00:0207: 20 20 20 38 
       00:020B: 38 38 20 20 
       00:020F: 20 20 38 38 
       00:0213: 38 20 38 38 
       00:0217: 38 20 20 20 
       00:021B: 20 20 38 38 
       00:021F: 38 20 38 38 
       00:0223: 38 20 20 20 
       00:0227: 20 20 38 38 
       00:022B: 38 20 20 20 
       00:022F: 20 20 38 38 
       00:0233: 38 20 38 38 
       00:0237: 38 20 54 38 
       00:023B: 38 62 20 20 
       00:023F: 20 20 20 20 
       00:0243: 20 20 20 27 
       00:0247: 38 38 38 20 
       00:024B: 00 
   772 00:024C: 59 38 38 62  StringTXT7		BYTE	"Y88b  d88P       888   
                        Y88b  d88P Y88b. .d88P 888     Y88b. .d88P 888  T88b  Y8
                    8b  d88P ", 0
       00:0250: 20 20 64 38 
       00:0254: 38 50 20 20 
       00:0258: 20 20 20 20 
       00:025C: 20 38 38 38 
       00:0260: 20 20 20 20 
       00:0264: 20 20 20 59 
       00:0268: 38 38 62 20 
       00:026C: 20 64 38 38 
       00:0270: 50 20 59 38 
       00:0274: 38 62 2E 20 
       00:0278: 2E 64 38 38 
       00:027C: 50 20 38 38 
       00:0280: 38 20 20 20 
  Sun Jan 31 2016  1:45                                                Page 22

    "VGA VGA.asm"
    "VGA"

       00:0284: 20 20 59 38 
       00:0288: 38 62 2E 20 
       00:028C: 2E 64 38 38 
       00:0290: 50 20 38 38 
       00:0294: 38 20 20 54 
       00:0298: 38 38 62 20 
       00:029C: 20 59 38 38 
       00:02A0: 62 20 20 64 
       00:02A4: 38 38 50 20 
       00:02A8: 00 
   773 00:02A9: 20 27 59 38  StringTXT8		BYTE	" 'Y8888P'        888   
                         'Y8888P'   'Y88888P'  88888888 'Y88888P'  888   T88b  '
                    Y8888P'  ", 0
       00:02AD: 38 38 38 50 
       00:02B1: 27 20 20 20 
       00:02B5: 20 20 20 20 
       00:02B9: 20 38 38 38 
       00:02BD: 20 20 20 20 
       00:02C1: 20 20 20 20 
       00:02C5: 27 59 38 38 
       00:02C9: 38 38 50 27 
       00:02CD: 20 20 20 27 
       00:02D1: 59 38 38 38 
       00:02D5: 38 38 50 27 
       00:02D9: 20 20 38 38 
       00:02DD: 38 38 38 38 
       00:02E1: 38 38 20 27 
       00:02E5: 59 38 38 38 
       00:02E9: 38 38 50 27 
       00:02ED: 20 20 38 38 
       00:02F1: 38 20 20 20 
       00:02F5: 54 38 38 62 
       00:02F9: 20 20 27 59 
       00:02FD: 38 38 38 38 
       00:0301: 50 27 20 20 
       00:0305: 00 
   774                                                                          
                                                              
   775                        MusicData
   776 00:0306: 7A 04 00 00  				WORD 1146,0,0,0
       00:030A: 00 00 00 00 
   777 00:030E: 7A 04 00 00  				WORD 1146,0,0,8
       00:0312: 00 00 08 00 
   778 00:0316: 7A 04 00 00  				WORD 1146,0,0,16
       00:031A: 00 00 10 00 
   779 00:031E: 00 00 00 00  				WORD 0,0,0,24
       00:0322: 00 00 18 00 
   780 00:0326: 7A 04 00 00  				WORD 1146,0,0,32
       00:032A: 00 00 20 00 
   781 00:032E: 00 00 00 00  				WORD 0,0,0,40
       00:0332: 00 00 28 00 
   782 00:0336: 00 00 00 00  				WORD 0,0,0,48
       00:033A: 00 00 30 00 
   783 00:033E: 00 00 00 00  				WORD 0,0,0,56
       00:0342: 00 00 38 00 
  Sun Jan 31 2016  1:45                                                Page 23

    "VGA VGA.asm"
    "VGA"

   784 00:0346: F5 08 00 00  				WORD 2293,0,0,64
       00:034A: 00 00 40 00 
   785 00:034E: 00 00 00 00  				WORD 0,0,0,72
       00:0352: 00 00 48 00 
   786 00:0356: 00 00 00 00  				WORD 0,0,0,80
       00:035A: 00 00 50 00 
   787 00:035E: 00 00 00 00  				WORD 0,0,0,88
       00:0362: 00 00 58 00 
   788 00:0366: 7A 04 00 00  				WORD 1146,0,0,96
       00:036A: 00 00 60 00 
   789 00:036E: 7A 04 00 00  				WORD 1146,0,0,104
       00:0372: 00 00 68 00 
   790 00:0376: 00 00 00 00  				WORD 0,0,0,112
       00:037A: 00 00 70 00 
   791 00:037E: 00 00 00 00  				WORD 0,0,0,120
       00:0382: 00 00 78 00 
   792 00:0386: 7A 04 00 00  				WORD 1146,0,0,128
       00:038A: 00 00 80 00 
   793 00:038E: 00 00 00 00  				WORD 0,0,0,136
       00:0392: 00 00 88 00 
   794 00:0396: 00 00 00 00  				WORD 0,0,0,144
       00:039A: 00 00 90 00 
   795 00:039E: 00 00 00 00  				WORD 0,0,0,152
       00:03A2: 00 00 98 00 
   796 00:03A6: F5 08 00 00  				WORD 2293,0,0,160
       00:03AA: 00 00 A0 00 
   797 00:03AE: 00 00 00 00  				WORD 0,0,0,168
       00:03B2: 00 00 A8 00 
   798 00:03B6: 00 00 00 00  				WORD 0,0,0,176
       00:03BA: 00 00 B0 00 
   799 00:03BE: 00 00 00 00  				WORD 0,0,0,184
       00:03C2: 00 00 B8 00 
   800 00:03C6: 7A 04 00 00  				WORD 1146,0,0,192
       00:03CA: 00 00 C0 00 
   801 00:03CE: 7A 04 00 00  				WORD 1146,0,0,200
       00:03D2: 00 00 C8 00 
   802 00:03D6: 00 00 00 00  				WORD 0,0,0,208
       00:03DA: 00 00 D0 00 
   803 00:03DE: 00 00 00 00  				WORD 0,0,0,216
       00:03E2: 00 00 D8 00 
   804 00:03E6: F5 08 00 00  				WORD 2293,0,0,224
       00:03EA: 00 00 E0 00 
   805 00:03EE: 00 00 00 00  				WORD 0,0,0,232
       00:03F2: 00 00 E8 00 
   806 00:03F6: F5 08 00 00  				WORD 2293,0,0,240
       00:03FA: 00 00 F0 00 
   807 00:03FE: 00 00 00 00  				WORD 0,0,0,248
       00:0402: 00 00 F8 00 
   808 00:0406: FB 05 00 00  				WORD 1531,0,0,256
       00:040A: 00 00 00 01 
   809 00:040E: FB 05 00 00  				WORD 1531,0,0,264
       00:0412: 00 00 08 01 
   810 00:0416: FB 05 00 00  				WORD 1531,0,0,272
       00:041A: 00 00 10 01 
   811 00:041E: 00 00 00 00  				WORD 0,0,0,280
  Sun Jan 31 2016  1:45                                                Page 24

    "VGA VGA.asm"
    "VGA"

       00:0422: 00 00 18 01 
   812 00:0426: FB 05 00 00  				WORD 1531,0,0,288
       00:042A: 00 00 20 01 
   813 00:042E: 00 00 00 00  				WORD 0,0,0,296
       00:0432: 00 00 28 01 
   814 00:0436: 00 00 00 00  				WORD 0,0,0,304
       00:043A: 00 00 30 01 
   815 00:043E: 00 00 00 00  				WORD 0,0,0,312
       00:0442: 00 00 38 01 
   816 00:0446: A8 0A 00 00  				WORD 2728,0,0,320
       00:044A: 00 00 40 01 
   817 00:044E: 00 00 00 00  				WORD 0,0,0,328
       00:0452: 00 00 48 01 
   818 00:0456: 00 00 00 00  				WORD 0,0,0,336
       00:045A: 00 00 50 01 
   819 00:045E: 00 00 00 00  				WORD 0,0,0,344
       00:0462: 00 00 58 01 
   820 00:0466: FB 05 00 00  				WORD 1531,0,0,352
       00:046A: 00 00 60 01 
   821 00:046E: FB 05 00 00  				WORD 1531,0,0,360
       00:0472: 00 00 68 01 
   822 00:0476: 00 00 00 00  				WORD 0,0,0,368
       00:047A: 00 00 70 01 
   823 00:047E: 00 00 00 00  				WORD 0,0,0,376
       00:0482: 00 00 78 01 
   824 00:0486: FB 05 00 00  				WORD 1531,0,0,384
       00:048A: 00 00 80 01 
   825 00:048E: 00 00 00 00  				WORD 0,0,0,392
       00:0492: 00 00 88 01 
   826 00:0496: 00 00 00 00  				WORD 0,0,0,400
       00:049A: 00 00 90 01 
   827 00:049E: 00 00 00 00  				WORD 0,0,0,408
       00:04A2: 00 00 98 01 
   828 00:04A6: A8 0A 00 00  				WORD 2728,0,0,416
       00:04AA: 00 00 A0 01 
   829 00:04AE: 00 00 00 00  				WORD 0,0,0,424
       00:04B2: 00 00 A8 01 
   830 00:04B6: 00 00 00 00  				WORD 0,0,0,432
       00:04BA: 00 00 B0 01 
   831 00:04BE: 00 00 00 00  				WORD 0,0,0,440
       00:04C2: 00 00 B8 01 
   832 00:04C6: FB 05 00 00  				WORD 1531,0,0,448
       00:04CA: 00 00 C0 01 
   833 00:04CE: FB 05 00 00  				WORD 1531,0,0,456
       00:04D2: 00 00 C8 01 
   834 00:04D6: 00 00 00 00  				WORD 0,0,0,464
       00:04DA: 00 00 D0 01 
   835 00:04DE: 00 00 00 00  				WORD 0,0,0,472
       00:04E2: 00 00 D8 01 
   836 00:04E6: F5 08 00 00  				WORD 2293,0,0,480
       00:04EA: 00 00 E0 01 
   837 00:04EE: 00 00 00 00  				WORD 0,0,0,488
       00:04F2: 00 00 E8 01 
   838 00:04F6: FB 05 00 00  				WORD 1531,0,0,496
       00:04FA: 00 00 F0 01 
  Sun Jan 31 2016  1:45                                                Page 25

    "VGA VGA.asm"
    "VGA"

   839 00:04FE: 00 00 00 00  				WORD 0,0,0,504
       00:0502: 00 00 F8 01 
   840 00:0506: 7A 04 00 00  				WORD 1146,0,0,512
       00:050A: 00 00 00 02 
   841 00:050E: 00 00 00 00  				WORD 0,0,0,520
       00:0512: 00 00 08 02 
   842 00:0516: 7A 04 00 00  				WORD 1146,0,0,528
       00:051A: 00 00 10 02 
   843 00:051E: 00 00 00 00  				WORD 0,0,0,536
       00:0522: 00 00 18 02 
   844 00:0526: 7A 04 00 00  				WORD 1146,0,0,544
       00:052A: 00 00 20 02 
   845 00:052E: 00 00 00 00  				WORD 0,0,0,552
       00:0532: 00 00 28 02 
   846 00:0536: 00 00 00 00  				WORD 0,0,0,560
       00:053A: 00 00 30 02 
   847 00:053E: 00 00 00 00  				WORD 0,0,0,568
       00:0542: 00 00 38 02 
   848 00:0546: F5 08 00 00  				WORD 2293,0,0,576
       00:054A: 00 00 40 02 
   849 00:054E: 00 00 00 00  				WORD 0,0,0,584
       00:0552: 00 00 48 02 
   850 00:0556: 00 00 00 00  				WORD 0,0,0,592
       00:055A: 00 00 50 02 
   851 00:055E: 00 00 00 00  				WORD 0,0,0,600
       00:0562: 00 00 58 02 
   852 00:0566: 7A 04 00 00  				WORD 1146,0,0,608
       00:056A: 00 00 60 02 
   853 00:056E: 7A 04 00 00  				WORD 1146,0,0,616
       00:0572: 00 00 68 02 
   854 00:0576: 00 00 00 00  				WORD 0,0,0,624
       00:057A: 00 00 70 02 
   855 00:057E: 00 00 00 00  				WORD 0,0,0,632
       00:0582: 00 00 78 02 
   856 00:0586: 7A 04 00 00  				WORD 1146,0,0,640
       00:058A: 00 00 80 02 
   857 00:058E: 00 00 00 00  				WORD 0,0,0,648
       00:0592: 00 00 88 02 
   858 00:0596: 00 00 00 00  				WORD 0,0,0,656
       00:059A: 00 00 90 02 
   859 00:059E: 00 00 00 00  				WORD 0,0,0,664
       00:05A2: 00 00 98 02 
   860 00:05A6: F5 08 00 00  				WORD 2293,0,0,672
       00:05AA: 00 00 A0 02 
   861 00:05AE: 00 00 00 00  				WORD 0,0,0,680
       00:05B2: 00 00 A8 02 
   862 00:05B6: 00 00 00 00  				WORD 0,0,0,688
       00:05BA: 00 00 B0 02 
   863 00:05BE: 00 00 00 00  				WORD 0,0,0,696
       00:05C2: 00 00 B8 02 
   864 00:05C6: 7A 04 00 00  				WORD 1146,0,0,704
       00:05CA: 00 00 C0 02 
   865 00:05CE: 7A 04 00 00  				WORD 1146,0,0,712
       00:05D2: 00 00 C8 02 
   866 00:05D6: 00 00 00 00  				WORD 0,0,0,720
  Sun Jan 31 2016  1:45                                                Page 26

    "VGA VGA.asm"
    "VGA"

       00:05DA: 00 00 D0 02 
   867 00:05DE: 00 00 00 00  				WORD 0,0,0,728
       00:05E2: 00 00 D8 02 
   868 00:05E6: F5 08 00 00  				WORD 2293,0,0,736
       00:05EA: 00 00 E0 02 
   869 00:05EE: 00 00 00 00  				WORD 0,0,0,744
       00:05F2: 00 00 E8 02 
   870 00:05F6: F5 08 00 00  				WORD 2293,0,0,752
       00:05FA: 00 00 F0 02 
   871 00:05FE: 00 00 00 00  				WORD 0,0,0,760
       00:0602: 00 00 F8 02 
   872 00:0606: FB 07 00 00  				WORD 2043,0,0,768
       00:060A: 00 00 00 03 
   873 00:060E: FB 07 00 00  				WORD 2043,0,0,776
       00:0612: 00 00 08 03 
   874 00:0616: FB 07 00 00  				WORD 2043,0,0,784
       00:061A: 00 00 10 03 
   875 00:061E: 00 00 00 00  				WORD 0,0,0,792
       00:0622: 00 00 18 03 
   876 00:0626: FB 07 00 00  				WORD 2043,0,0,800
       00:062A: 00 00 20 03 
   877 00:062E: 00 00 00 00  				WORD 0,0,0,808
       00:0632: 00 00 28 03 
   878 00:0636: 00 00 00 00  				WORD 0,0,0,816
       00:063A: 00 00 30 03 
   879 00:063E: 00 00 00 00  				WORD 0,0,0,824
       00:0642: 00 00 38 03 
   880 00:0646: F6 0B 00 00  				WORD 3062,0,0,832
       00:064A: 00 00 40 03 
   881 00:064E: 00 00 00 00  				WORD 0,0,0,840
       00:0652: 00 00 48 03 
   882 00:0656: 00 00 00 00  				WORD 0,0,0,848
       00:065A: 00 00 50 03 
   883 00:065E: 00 00 00 00  				WORD 0,0,0,856
       00:0662: 00 00 58 03 
   884 00:0666: FB 07 00 00  				WORD 2043,0,0,864
       00:066A: 00 00 60 03 
   885 00:066E: FB 07 00 00  				WORD 2043,0,0,872
       00:0672: 00 00 68 03 
   886 00:0676: 00 00 00 00  				WORD 0,0,0,880
       00:067A: 00 00 70 03 
   887 00:067E: 00 00 00 00  				WORD 0,0,0,888
       00:0682: 00 00 78 03 
   888 00:0686: FB 05 00 00  				WORD 1531,0,0,896
       00:068A: 00 00 80 03 
   889 00:068E: 00 00 00 00  				WORD 0,0,0,904
       00:0692: 00 00 88 03 
   890 00:0696: 00 00 00 00  				WORD 0,0,0,912
       00:069A: 00 00 90 03 
   891 00:069E: 00 00 00 00  				WORD 0,0,0,920
       00:06A2: 00 00 98 03 
   892 00:06A6: F6 0B 00 00  				WORD 3062,0,0,928
       00:06AA: 00 00 A0 03 
   893 00:06AE: 00 00 00 00  				WORD 0,0,0,936
       00:06B2: 00 00 A8 03 
  Sun Jan 31 2016  1:45                                                Page 27

    "VGA VGA.asm"
    "VGA"

   894 00:06B6: 00 00 00 00  				WORD 0,0,0,944
       00:06BA: 00 00 B0 03 
   895 00:06BE: 00 00 00 00  				WORD 0,0,0,952
       00:06C2: 00 00 B8 03 
   896 00:06C6: FB 05 00 00  				WORD 1531,0,0,960
       00:06CA: 00 00 C0 03 
   897 00:06CE: FB 05 00 00  				WORD 1531,0,0,968
       00:06D2: 00 00 C8 03 
   898 00:06D6: 00 00 00 00  				WORD 0,0,0,976
       00:06DA: 00 00 D0 03 
   899 00:06DE: 00 00 00 00  				WORD 0,0,0,984
       00:06E2: 00 00 D8 03 
   900 00:06E6: F6 0B 00 00  				WORD 3062,0,0,992
       00:06EA: 00 00 E0 03 
   901 00:06EE: 00 00 00 00  				WORD 0,0,0,1000
       00:06F2: 00 00 E8 03 
   902 00:06F6: F6 0B 00 00  				WORD 3062,0,0,1008
       00:06FA: 00 00 F0 03 
   903 00:06FE: 00 00 00 00  				WORD 0,0,0,1016
       00:0702: 00 00 F8 03 
   904 00:0706: 7A 04 FB 07  				WORD 1146,2043,0,1024
       00:070A: 00 00 00 04 
   905 00:070E: 7A 04 FB 07  				WORD 1146,2043,0,1032
       00:0712: 00 00 08 04 
   906 00:0716: 7A 04 00 00  				WORD 1146,0,0,1040
       00:071A: 00 00 10 04 
   907 00:071E: 00 00 00 00  				WORD 0,0,0,1048
       00:0722: 00 00 18 04 
   908 00:0726: 7A 04 00 00  				WORD 1146,0,0,1056
       00:072A: 00 00 20 04 
   909 00:072E: 00 00 00 00  				WORD 0,0,0,1064
       00:0732: 00 00 28 04 
   910 00:0736: 00 00 00 00  				WORD 0,0,0,1072
       00:073A: 00 00 30 04 
   911 00:073E: 00 00 00 00  				WORD 0,0,0,1080
       00:0742: 00 00 38 04 
   912 00:0746: F5 08 5A 19  				WORD 2293,6490,0,1088
       00:074A: 00 00 40 04 
   913 00:074E: 00 00 00 00  				WORD 0,0,0,1096
       00:0752: 00 00 48 04 
   914 00:0756: 00 00 00 00  				WORD 0,0,0,1104
       00:075A: 00 00 50 04 
   915 00:075E: 00 00 00 00  				WORD 0,0,0,1112
       00:0762: 00 00 58 04 
   916 00:0766: 7A 04 00 00  				WORD 1146,0,0,1120
       00:076A: 00 00 60 04 
   917 00:076E: 7A 04 00 00  				WORD 1146,0,0,1128
       00:0772: 00 00 68 04 
   918 00:0776: 00 00 00 00  				WORD 0,0,0,1136
       00:077A: 00 00 70 04 
   919 00:077E: 00 00 00 00  				WORD 0,0,0,1144
       00:0782: 00 00 78 04 
   920 00:0786: 7A 04 FB 07  				WORD 1146,2043,0,1152
       00:078A: 00 00 80 04 
   921 00:078E: 00 00 FB 07  				WORD 0,2043,0,1160
  Sun Jan 31 2016  1:45                                                Page 28

    "VGA VGA.asm"
    "VGA"

       00:0792: 00 00 88 04 
   922 00:0796: 00 00 00 00  				WORD 0,0,0,1168
       00:079A: 00 00 90 04 
   923 00:079E: 00 00 00 00  				WORD 0,0,0,1176
       00:07A2: 00 00 98 04 
   924 00:07A6: F5 08 FB 07  				WORD 2293,2043,0,1184
       00:07AA: 00 00 A0 04 
   925 00:07AE: 00 00 FB 07  				WORD 0,2043,0,1192
       00:07B2: 00 00 A8 04 
   926 00:07B6: 00 00 00 00  				WORD 0,0,0,1200
       00:07BA: 00 00 B0 04 
   927 00:07BE: 00 00 00 00  				WORD 0,0,0,1208
       00:07C2: 00 00 B8 04 
   928 00:07C6: 7A 04 5A 19  				WORD 1146,6490,0,1216
       00:07CA: 00 00 C0 04 
   929 00:07CE: 7A 04 00 00  				WORD 1146,0,0,1224
       00:07D2: 00 00 C8 04 
   930 00:07D6: 00 00 00 00  				WORD 0,0,0,1232
       00:07DA: 00 00 D0 04 
   931 00:07DE: 00 00 00 00  				WORD 0,0,0,1240
       00:07E2: 00 00 D8 04 
   932 00:07E6: F5 08 00 00  				WORD 2293,0,0,1248
       00:07EA: 00 00 E0 04 
   933 00:07EE: 00 00 00 00  				WORD 0,0,0,1256
       00:07F2: 00 00 E8 04 
   934 00:07F6: F5 08 00 00  				WORD 2293,0,0,1264
       00:07FA: 00 00 F0 04 
   935 00:07FE: 00 00 00 00  				WORD 0,0,0,1272
       00:0802: 00 00 F8 04 
   936 00:0806: FB 05 FB 07  				WORD 1531,2043,0,1280
       00:080A: 00 00 00 05 
   937 00:080E: FB 05 FB 07  				WORD 1531,2043,0,1288
       00:0812: 00 00 08 05 
   938 00:0816: FB 05 00 00  				WORD 1531,0,0,1296
       00:081A: 00 00 10 05 
   939 00:081E: 00 00 00 00  				WORD 0,0,0,1304
       00:0822: 00 00 18 05 
   940 00:0826: FB 05 00 00  				WORD 1531,0,0,1312
       00:082A: 00 00 20 05 
   941 00:082E: 00 00 00 00  				WORD 0,0,0,1320
       00:0832: 00 00 28 05 
   942 00:0836: 00 00 00 00  				WORD 0,0,0,1328
       00:083A: 00 00 30 05 
   943 00:083E: 00 00 00 00  				WORD 0,0,0,1336
       00:0842: 00 00 38 05 
   944 00:0846: A8 0A 5A 19  				WORD 2728,6490,0,1344
       00:084A: 00 00 40 05 
   945 00:084E: 00 00 00 00  				WORD 0,0,0,1352
       00:0852: 00 00 48 05 
   946 00:0856: 00 00 00 00  				WORD 0,0,0,1360
       00:085A: 00 00 50 05 
   947 00:085E: 00 00 00 00  				WORD 0,0,0,1368
       00:0862: 00 00 58 05 
   948 00:0866: FB 05 00 00  				WORD 1531,0,0,1376
       00:086A: 00 00 60 05 
  Sun Jan 31 2016  1:45                                                Page 29

    "VGA VGA.asm"
    "VGA"

   949 00:086E: FB 05 00 00  				WORD 1531,0,0,1384
       00:0872: 00 00 68 05 
   950 00:0876: 00 00 00 00  				WORD 0,0,0,1392
       00:087A: 00 00 70 05 
   951 00:087E: 00 00 00 00  				WORD 0,0,0,1400
       00:0882: 00 00 78 05 
   952 00:0886: FB 05 FB 07  				WORD 1531,2043,0,1408
       00:088A: 00 00 80 05 
   953 00:088E: 00 00 FB 07  				WORD 0,2043,0,1416
       00:0892: 00 00 88 05 
   954 00:0896: 00 00 00 00  				WORD 0,0,0,1424
       00:089A: 00 00 90 05 
   955 00:089E: 00 00 00 00  				WORD 0,0,0,1432
       00:08A2: 00 00 98 05 
   956 00:08A6: A8 0A FB 07  				WORD 2728,2043,0,1440
       00:08AA: 00 00 A0 05 
   957 00:08AE: 00 00 FB 07  				WORD 0,2043,0,1448
       00:08B2: 00 00 A8 05 
   958 00:08B6: 00 00 00 00  				WORD 0,0,0,1456
       00:08BA: 00 00 B0 05 
   959 00:08BE: 00 00 00 00  				WORD 0,0,0,1464
       00:08C2: 00 00 B8 05 
   960 00:08C6: FB 05 5A 19  				WORD 1531,6490,0,1472
       00:08CA: 00 00 C0 05 
   961 00:08CE: FB 05 00 00  				WORD 1531,0,0,1480
       00:08D2: 00 00 C8 05 
   962 00:08D6: 00 00 00 00  				WORD 0,0,0,1488
       00:08DA: 00 00 D0 05 
   963 00:08DE: 00 00 00 00  				WORD 0,0,0,1496
       00:08E2: 00 00 D8 05 
   964 00:08E6: F5 08 5A 19  				WORD 2293,6490,0,1504
       00:08EA: 00 00 E0 05 
   965 00:08EE: 00 00 00 00  				WORD 0,0,0,1512
       00:08F2: 00 00 E8 05 
   966 00:08F6: FB 05 5A 19  				WORD 1531,6490,0,1520
       00:08FA: 00 00 F0 05 
   967 00:08FE: 00 00 00 00  				WORD 0,0,0,1528
       00:0902: 00 00 F8 05 
   968 00:0906: 7A 04 FB 07  				WORD 1146,2043,0,1536
       00:090A: 00 00 00 06 
   969 00:090E: 00 00 FB 07  				WORD 0,2043,0,1544
       00:0912: 00 00 08 06 
   970 00:0916: 7A 04 00 00  				WORD 1146,0,0,1552
       00:091A: 00 00 10 06 
   971 00:091E: 00 00 00 00  				WORD 0,0,0,1560
       00:0922: 00 00 18 06 
   972 00:0926: 7A 04 00 00  				WORD 1146,0,0,1568
       00:092A: 00 00 20 06 
   973 00:092E: 00 00 00 00  				WORD 0,0,0,1576
       00:0932: 00 00 28 06 
   974 00:0936: 00 00 00 00  				WORD 0,0,0,1584
       00:093A: 00 00 30 06 
   975 00:093E: 00 00 00 00  				WORD 0,0,0,1592
       00:0942: 00 00 38 06 
   976 00:0946: F5 08 5A 19  				WORD 2293,6490,0,1600
  Sun Jan 31 2016  1:45                                                Page 30

    "VGA VGA.asm"
    "VGA"

       00:094A: 00 00 40 06 
   977 00:094E: 00 00 00 00  				WORD 0,0,0,1608
       00:0952: 00 00 48 06 
   978 00:0956: 00 00 00 00  				WORD 0,0,0,1616
       00:095A: 00 00 50 06 
   979 00:095E: 00 00 00 00  				WORD 0,0,0,1624
       00:0962: 00 00 58 06 
   980 00:0966: 7A 04 00 00  				WORD 1146,0,0,1632
       00:096A: 00 00 60 06 
   981 00:096E: 7A 04 00 00  				WORD 1146,0,0,1640
       00:0972: 00 00 68 06 
   982 00:0976: 00 00 00 00  				WORD 0,0,0,1648
       00:097A: 00 00 70 06 
   983 00:097E: 00 00 00 00  				WORD 0,0,0,1656
       00:0982: 00 00 78 06 
   984 00:0986: 7A 04 FB 07  				WORD 1146,2043,0,1664
       00:098A: 00 00 80 06 
   985 00:098E: 00 00 FB 07  				WORD 0,2043,0,1672
       00:0992: 00 00 88 06 
   986 00:0996: 00 00 00 00  				WORD 0,0,0,1680
       00:099A: 00 00 90 06 
   987 00:099E: 00 00 00 00  				WORD 0,0,0,1688
       00:09A2: 00 00 98 06 
   988 00:09A6: F5 08 FB 07  				WORD 2293,2043,0,1696
       00:09AA: 00 00 A0 06 
   989 00:09AE: 00 00 FB 07  				WORD 0,2043,0,1704
       00:09B2: 00 00 A8 06 
   990 00:09B6: 00 00 00 00  				WORD 0,0,0,1712
       00:09BA: 00 00 B0 06 
   991 00:09BE: 00 00 00 00  				WORD 0,0,0,1720
       00:09C2: 00 00 B8 06 
   992 00:09C6: 7A 04 5A 19  				WORD 1146,6490,0,1728
       00:09CA: 00 00 C0 06 
   993 00:09CE: 7A 04 00 00  				WORD 1146,0,0,1736
       00:09D2: 00 00 C8 06 
   994 00:09D6: 00 00 00 00  				WORD 0,0,0,1744
       00:09DA: 00 00 D0 06 
   995 00:09DE: 00 00 00 00  				WORD 0,0,0,1752
       00:09E2: 00 00 D8 06 
   996 00:09E6: F5 08 00 00  				WORD 2293,0,0,1760
       00:09EA: 00 00 E0 06 
   997 00:09EE: 00 00 00 00  				WORD 0,0,0,1768
       00:09F2: 00 00 E8 06 
   998 00:09F6: F5 08 00 00  				WORD 2293,0,0,1776
       00:09FA: 00 00 F0 06 
   999 00:09FE: 00 00 00 00  				WORD 0,0,0,1784
       00:0A02: 00 00 F8 06 
  1000 00:0A06: FB 07 FB 07  				WORD 2043,2043,0,1792
       00:0A0A: 00 00 00 07 
  1001 00:0A0E: FB 07 FB 07  				WORD 2043,2043,0,1800
       00:0A12: 00 00 08 07 
  1002 00:0A16: FB 07 00 00  				WORD 2043,0,0,1808
       00:0A1A: 00 00 10 07 
  1003 00:0A1E: 00 00 00 00  				WORD 0,0,0,1816
       00:0A22: 00 00 18 07 
  Sun Jan 31 2016  1:45                                                Page 31

    "VGA VGA.asm"
    "VGA"

  1004 00:0A26: FB 07 00 00  				WORD 2043,0,0,1824
       00:0A2A: 00 00 20 07 
  1005 00:0A2E: 00 00 00 00  				WORD 0,0,0,1832
       00:0A32: 00 00 28 07 
  1006 00:0A36: 00 00 00 00  				WORD 0,0,0,1840
       00:0A3A: 00 00 30 07 
  1007 00:0A3E: 00 00 00 00  				WORD 0,0,0,1848
       00:0A42: 00 00 38 07 
  1008 00:0A46: F6 0B 5A 19  				WORD 3062,6490,0,1856
       00:0A4A: 00 00 40 07 
  1009 00:0A4E: 00 00 00 00  				WORD 0,0,0,1864
       00:0A52: 00 00 48 07 
  1010 00:0A56: 00 00 00 00  				WORD 0,0,0,1872
       00:0A5A: 00 00 50 07 
  1011 00:0A5E: 00 00 00 00  				WORD 0,0,0,1880
       00:0A62: 00 00 58 07 
  1012 00:0A66: FB 07 00 00  				WORD 2043,0,0,1888
       00:0A6A: 00 00 60 07 
  1013 00:0A6E: FB 07 00 00  				WORD 2043,0,0,1896
       00:0A72: 00 00 68 07 
  1014 00:0A76: 00 00 00 00  				WORD 0,0,0,1904
       00:0A7A: 00 00 70 07 
  1015 00:0A7E: 00 00 00 00  				WORD 0,0,0,1912
       00:0A82: 00 00 78 07 
  1016 00:0A86: FB 05 FB 07  				WORD 1531,2043,0,1920
       00:0A8A: 00 00 80 07 
  1017 00:0A8E: 00 00 FB 07  				WORD 0,2043,0,1928
       00:0A92: 00 00 88 07 
  1018 00:0A96: 00 00 00 00  				WORD 0,0,0,1936
       00:0A9A: 00 00 90 07 
  1019 00:0A9E: 00 00 00 00  				WORD 0,0,0,1944
       00:0AA2: 00 00 98 07 
  1020 00:0AA6: F6 0B 00 00  				WORD 3062,0,0,1952
       00:0AAA: 00 00 A0 07 
  1021 00:0AAE: 00 00 00 00  				WORD 0,0,0,1960
       00:0AB2: 00 00 A8 07 
  1022 00:0AB6: 00 00 FB 07  				WORD 0,2043,0,1968
       00:0ABA: 00 00 B0 07 
  1023 00:0ABE: 00 00 00 00  				WORD 0,0,0,1976
       00:0AC2: 00 00 B8 07 
  1024 00:0AC6: FB 05 5A 19  				WORD 1531,6490,0,1984
       00:0ACA: 00 00 C0 07 
  1025 00:0ACE: FB 05 00 00  				WORD 1531,0,0,1992
       00:0AD2: 00 00 C8 07 
  1026 00:0AD6: 00 00 FB 07  				WORD 0,2043,0,2000
       00:0ADA: 00 00 D0 07 
  1027 00:0ADE: 00 00 00 00  				WORD 0,0,0,2008
       00:0AE2: 00 00 D8 07 
  1028 00:0AE6: F6 0B 5A 19  				WORD 3062,6490,0,2016
       00:0AEA: 00 00 E0 07 
  1029 00:0AEE: 00 00 00 00  				WORD 0,0,0,2024
       00:0AF2: 00 00 E8 07 
  1030 00:0AF6: F6 0B 5A 19  				WORD 3062,6490,0,2032
       00:0AFA: 00 00 F0 07 
  1031 00:0AFE: 00 00 00 00  				WORD 0,0,0,2040
  Sun Jan 31 2016  1:45                                                Page 32

    "VGA VGA.asm"
    "VGA"

       00:0B02: 00 00 F8 07 
  1032 00:0B06: 7A 04 FB 07  				WORD 1146,2043,0,2040
       00:0B0A: 00 00 F8 07 
  1033 00:0B0E: 7A 04 FB 07  				WORD 1146,2043,0,1024
       00:0B12: 00 00 00 04 
  1034 00:0B16: 7A 04 00 00  				WORD 1146,0,0,512
       00:0B1A: 00 00 00 02 
  1035 00:0B1E: 00 00 00 00  				WORD 0,0,0,256
       00:0B22: 00 00 00 01 
  1036 00:0B26: 7A 04 00 00  				WORD 1146,0,0,2040
       00:0B2A: 00 00 F8 07 
  1037 00:0B2E: 00 00 00 00  				WORD 0,0,0,1024
       00:0B32: 00 00 00 04 
  1038 00:0B36: 00 00 00 00  				WORD 0,0,0,512
       00:0B3A: 00 00 00 02 
  1039 00:0B3E: 00 00 00 00  				WORD 0,0,0,256
       00:0B42: 00 00 00 01 
  1040 00:0B46: F5 08 5A 19  				WORD 2293,6490,9175,2040
       00:0B4A: D7 23 F8 07 
  1041 00:0B4E: 00 00 00 00  				WORD 0,0,9175,1024
       00:0B52: D7 23 00 04 
  1042 00:0B56: 00 00 00 00  				WORD 0,0,9175,512
       00:0B5A: D7 23 00 02 
  1043 00:0B5E: 00 00 00 00  				WORD 0,0,9175,256
       00:0B62: D7 23 00 01 
  1044 00:0B66: 7A 04 00 00  				WORD 1146,0,0,2040
       00:0B6A: 00 00 F8 07 
  1045 00:0B6E: 7A 04 00 00  				WORD 1146,0,0,1024
       00:0B72: 00 00 00 04 
  1046 00:0B76: 00 00 00 00  				WORD 0,0,0,512
       00:0B7A: 00 00 00 02 
  1047 00:0B7E: 00 00 00 00  				WORD 0,0,0,256
       00:0B82: 00 00 00 01 
  1048 00:0B86: 7A 04 FB 07  				WORD 1146,2043,9175,2040
       00:0B8A: D7 23 F8 07 
  1049 00:0B8E: 00 00 FB 07  				WORD 0,2043,9175,1024
       00:0B92: D7 23 00 04 
  1050 00:0B96: 00 00 00 00  				WORD 0,0,0,512
       00:0B9A: 00 00 00 02 
  1051 00:0B9E: 00 00 00 00  				WORD 0,0,0,256
       00:0BA2: 00 00 00 01 
  1052 00:0BA6: F5 08 FB 07  				WORD 2293,2043,13750,204
                    0
       00:0BAA: B6 35 F8 07 
  1053 00:0BAE: 00 00 FB 07  				WORD 0,2043,13750,1024
       00:0BB2: B6 35 00 04 
  1054 00:0BB6: 00 00 00 00  				WORD 0,0,13750,512
       00:0BBA: B6 35 00 02 
  1055 00:0BBE: 00 00 00 00  				WORD 0,0,13750,256
       00:0BC2: B6 35 00 01 
  1056 00:0BC6: 7A 04 5A 19  				WORD 1146,6490,13750,204
                    0
       00:0BCA: B6 35 F8 07 
  1057 00:0BCE: 7A 04 00 00  				WORD 1146,0,13750,1024
       00:0BD2: B6 35 00 04 
  Sun Jan 31 2016  1:45                                                Page 33

    "VGA VGA.asm"
    "VGA"

  1058 00:0BD6: 00 00 00 00  				WORD 0,0,13750,512
       00:0BDA: B6 35 00 02 
  1059 00:0BDE: 00 00 00 00  				WORD 0,0,13750,256
       00:0BE2: B6 35 00 01 
  1060 00:0BE6: F5 08 00 00  				WORD 2293,0,13750,2040
       00:0BEA: B6 35 F8 07 
  1061 00:0BEE: 00 00 00 00  				WORD 0,0,13750,1024
       00:0BF2: B6 35 00 04 
  1062 00:0BF6: F5 08 00 00  				WORD 2293,0,0,2040
       00:0BFA: 00 00 F8 07 
  1063 00:0BFE: 00 00 00 00  				WORD 0,0,0,1024
       00:0C02: 00 00 00 04 
  1064 00:0C06: FB 05 FB 07  				WORD 1531,2043,6125,2040
       00:0C0A: ED 17 F8 07 
  1065 00:0C0E: FB 05 FB 07  				WORD 1531,2043,6125,1024
       00:0C12: ED 17 00 04 
  1066 00:0C16: FB 05 00 00  				WORD 1531,0,6125,512
       00:0C1A: ED 17 00 02 
  1067 00:0C1E: 00 00 00 00  				WORD 0,0,6125,256
       00:0C22: ED 17 00 01 
  1068 00:0C26: FB 05 00 00  				WORD 1531,0,6125,2040
       00:0C2A: ED 17 F8 07 
  1069 00:0C2E: 00 00 00 00  				WORD 0,0,6125,1024
       00:0C32: ED 17 00 04 
  1070 00:0C36: 00 00 00 00  				WORD 0,0,6125,512
       00:0C3A: ED 17 00 02 
  1071 00:0C3E: 00 00 00 00  				WORD 0,0,6125,256
       00:0C42: ED 17 00 01 
  1072 00:0C46: A8 0A 5A 19  				WORD 2728,6490,0,2040
       00:0C4A: 00 00 F8 07 
  1073 00:0C4E: 00 00 00 00  				WORD 0,0,0,1024
       00:0C52: 00 00 00 04 
  1074 00:0C56: 00 00 00 00  				WORD 0,0,0,512
       00:0C5A: 00 00 00 02 
  1075 00:0C5E: 00 00 00 00  				WORD 0,0,0,256
       00:0C62: 00 00 00 01 
  1076 00:0C66: FB 05 00 00  				WORD 1531,0,0,2040
       00:0C6A: 00 00 F8 07 
  1077 00:0C6E: FB 05 00 00  				WORD 1531,0,0,1024
       00:0C72: 00 00 00 04 
  1078 00:0C76: 00 00 00 00  				WORD 0,0,0,512
       00:0C7A: 00 00 00 02 
  1079 00:0C7E: 00 00 00 00  				WORD 0,0,0,256
       00:0C82: 00 00 00 01 
  1080 00:0C86: FB 05 FB 07  				WORD 1531,2043,5457,2040
       00:0C8A: 51 15 F8 07 
  1081 00:0C8E: 00 00 FB 07  				WORD 0,2043,5457,1024
       00:0C92: 51 15 00 04 
  1082 00:0C96: 00 00 00 00  				WORD 0,0,5457,512
       00:0C9A: 51 15 00 02 
  1083 00:0C9E: 00 00 00 00  				WORD 0,0,5457,256
       00:0CA2: 51 15 00 01 
  1084 00:0CA6: A8 0A FB 07  				WORD 2728,2043,5457,2040
       00:0CAA: 51 15 F8 07 
  1085 00:0CAE: 00 00 FB 07  				WORD 0,2043,5457,1024
  Sun Jan 31 2016  1:45                                                Page 34

    "VGA VGA.asm"
    "VGA"

       00:0CB2: 51 15 00 04 
  1086 00:0CB6: 00 00 00 00  				WORD 0,0,0,512
       00:0CBA: 00 00 00 02 
  1087 00:0CBE: 00 00 00 00  				WORD 0,0,0,256
       00:0CC2: 00 00 00 01 
  1088 00:0CC6: FB 05 5A 19  				WORD 1531,6490,7717,2040
       00:0CCA: 25 1E F8 07 
  1089 00:0CCE: FB 05 00 00  				WORD 1531,0,7717,1024
       00:0CD2: 25 1E 00 04 
  1090 00:0CD6: 00 00 00 00  				WORD 0,0,7717,512
       00:0CDA: 25 1E 00 02 
  1091 00:0CDE: 00 00 00 00  				WORD 0,0,7717,256
       00:0CE2: 25 1E 00 01 
  1092 00:0CE6: F5 08 5A 19  				WORD 2293,6490,0,2040
       00:0CEA: 00 00 F8 07 
  1093 00:0CEE: 00 00 00 00  				WORD 0,0,0,1024
       00:0CF2: 00 00 00 04 
  1094 00:0CF6: FB 05 5A 19  				WORD 1531,6490,0,2040
       00:0CFA: 00 00 F8 07 
  1095 00:0CFE: 00 00 00 00  				WORD 0,0,0,1024
       00:0D02: 00 00 00 04 
  1096 00:0D06: 7A 04 FB 07  				WORD 1146,2043,6875,2040
       00:0D0A: DB 1A F8 07 
  1097 00:0D0E: 00 00 FB 07  				WORD 0,2043,6875,1024
       00:0D12: DB 1A 00 04 
  1098 00:0D16: 7A 04 00 00  				WORD 1146,0,6875,2040
       00:0D1A: DB 1A F8 07 
  1099 00:0D1E: 00 00 00 00  				WORD 0,0,6875,1024
       00:0D22: DB 1A 00 04 
  1100 00:0D26: 7A 04 00 00  				WORD 1146,0,6875,2040
       00:0D2A: DB 1A F8 07 
  1101 00:0D2E: 00 00 00 00  				WORD 0,0,6875,1024
       00:0D32: DB 1A 00 04 
  1102 00:0D36: 00 00 00 00  				WORD 0,0,6875,512
       00:0D3A: DB 1A 00 02 
  1103 00:0D3E: 00 00 00 00  				WORD 0,0,6875,256
       00:0D42: DB 1A 00 01 
  1104 00:0D46: F5 08 5A 19  				WORD 2293,6490,6875,2040
       00:0D4A: DB 1A F8 07 
  1105 00:0D4E: 00 00 00 00  				WORD 0,0,0,1024
       00:0D52: 00 00 00 04 
  1106 00:0D56: 00 00 00 00  				WORD 0,0,0,512
       00:0D5A: 00 00 00 02 
  1107 00:0D5E: 00 00 00 00  				WORD 0,0,0,256
       00:0D62: 00 00 00 01 
  1108 00:0D66: 7A 04 00 00  				WORD 1146,0,6125,2040
       00:0D6A: ED 17 F8 07 
  1109 00:0D6E: 7A 04 00 00  				WORD 1146,0,6125,1024
       00:0D72: ED 17 00 04 
  1110 00:0D76: 00 00 00 00  				WORD 0,0,6125,512
       00:0D7A: ED 17 00 02 
  1111 00:0D7E: 00 00 00 00  				WORD 0,0,6125,256
       00:0D82: ED 17 00 01 
  1112 00:0D86: 7A 04 FB 07  				WORD 1146,2043,0,2040
       00:0D8A: 00 00 F8 07 
  Sun Jan 31 2016  1:45                                                Page 35

    "VGA VGA.asm"
    "VGA"

  1113 00:0D8E: 00 00 FB 07  				WORD 0,2043,0,1024
       00:0D92: 00 00 00 04 
  1114 00:0D96: 00 00 00 00  				WORD 0,0,0,512
       00:0D9A: 00 00 00 02 
  1115 00:0D9E: 00 00 00 00  				WORD 0,0,0,256
       00:0DA2: 00 00 00 01 
  1116 00:0DA6: F5 08 FB 07  				WORD 2293,2043,5457,2040
       00:0DAA: 51 15 F8 07 
  1117 00:0DAE: 00 00 FB 07  				WORD 0,2043,5457,1024
       00:0DB2: 51 15 00 04 
  1118 00:0DB6: 00 00 00 00  				WORD 0,0,5457,512
       00:0DBA: 51 15 00 02 
  1119 00:0DBE: 00 00 00 00  				WORD 0,0,5457,256
       00:0DC2: 51 15 00 01 
  1120 00:0DC6: 7A 04 5A 19  				WORD 1146,6490,0,2040
       00:0DCA: 00 00 F8 07 
  1121 00:0DCE: 7A 04 00 00  				WORD 1146,0,0,1024
       00:0DD2: 00 00 00 04 
  1122 00:0DD6: 00 00 00 00  				WORD 0,0,0,512
       00:0DDA: 00 00 00 02 
  1123 00:0DDE: 00 00 00 00  				WORD 0,0,0,256
       00:0DE2: 00 00 00 01 
  1124 00:0DE6: F5 08 00 00  				WORD 2293,0,8175,2040
       00:0DEA: EF 1F F8 07 
  1125 00:0DEE: 00 00 00 00  				WORD 0,0,8175,1024
       00:0DF2: EF 1F 00 04 
  1126 00:0DF6: F5 08 00 00  				WORD 2293,0,0,2040
       00:0DFA: 00 00 F8 07 
  1127 00:0DFE: 00 00 00 00  				WORD 0,0,0,1024
       00:0E02: 00 00 00 04 
  1128 00:0E06: FB 07 FB 07  				WORD 2043,2043,9175,2040
       00:0E0A: D7 23 F8 07 
  1129 00:0E0E: FB 07 FB 07  				WORD 2043,2043,9175,1024
       00:0E12: D7 23 00 04 
  1130 00:0E16: FB 07 00 00  				WORD 2043,0,9175,512
       00:0E1A: D7 23 00 02 
  1131 00:0E1E: 00 00 00 00  				WORD 0,0,9175,256
       00:0E22: D7 23 00 01 
  1132 00:0E26: FB 07 FB 07  				WORD 2043,2043,9175,2040
       00:0E2A: D7 23 F8 07 
  1133 00:0E2E: 00 00 FB 07  				WORD 0,2043,9175,1024
       00:0E32: D7 23 00 04 
  1134 00:0E36: 00 00 00 00  				WORD 0,0,0,512
       00:0E3A: 00 00 00 02 
  1135 00:0E3E: 00 00 00 00  				WORD 0,0,0,256
       00:0E42: 00 00 00 01 
  1136 00:0E46: F6 0B 5A 19  				WORD 3062,6490,9175,1024
       00:0E4A: D7 23 00 04 
  1137 00:0E4E: 00 00 00 00  				WORD 0,0,9175,512
       00:0E52: D7 23 00 02 
  1138 00:0E56: 00 00 00 00  				WORD 0,0,0,256
       00:0E5A: 00 00 00 01 
  1139 00:0E5E: 00 00 00 00  				WORD 0,0,0,128
       00:0E62: 00 00 80 00 
  1140 00:0E66: FB 07 00 00  				WORD 2043,0,0,2040
  Sun Jan 31 2016  1:45                                                Page 36

    "VGA VGA.asm"
    "VGA"

       00:0E6A: 00 00 F8 07 
  1141 00:0E6E: FB 07 00 00  				WORD 2043,0,0,1024
       00:0E72: 00 00 00 04 
  1142 00:0E76: 00 00 00 00  				WORD 0,0,0,512
       00:0E7A: 00 00 00 02 
  1143 00:0E7E: 00 00 00 00  				WORD 0,0,0,256
       00:0E82: 00 00 00 01 
  1144 00:0E86: FB 05 FB 07  				WORD 1531,2043,10915,204
                    0
       00:0E8A: A3 2A F8 07 
  1145 00:0E8E: 00 00 FB 07  				WORD 0,2043,10915,1024
       00:0E92: A3 2A 00 04 
  1146 00:0E96: 00 00 00 00  				WORD 0,0,10915,512
       00:0E9A: A3 2A 00 02 
  1147 00:0E9E: 00 00 00 00  				WORD 0,0,10915,256
       00:0EA2: A3 2A 00 01 
  1148 00:0EA6: F6 0B 00 00  				WORD 3062,0,0,2040
       00:0EAA: 00 00 F8 07 
  1149 00:0EAE: 00 00 00 00  				WORD 0,0,0,1024
       00:0EB2: 00 00 00 04 
  1150 00:0EB6: 00 00 00 00  				WORD 0,0,0,512
       00:0EBA: 00 00 00 02 
  1151 00:0EBE: 00 00 00 00  				WORD 0,0,0,256
       00:0EC2: 00 00 00 01 
  1152 00:0EC6: FB 05 5A 19  				WORD 1531,6490,10300,204
                    0
       00:0ECA: 3C 28 F8 07 
  1153 00:0ECE: FB 05 00 00  				WORD 1531,0,10300,1024
       00:0ED2: 3C 28 00 04 
  1154 00:0ED6: 00 00 FB 07  				WORD 0,2043,10300,512
       00:0EDA: 3C 28 00 02 
  1155 00:0EDE: 00 00 00 00  				WORD 0,0,10300,256
       00:0EE2: 3C 28 00 01 
  1156 00:0EE6: F6 0B 5A 19  				WORD 3062,6490,10300,204
                    0
       00:0EEA: 3C 28 F8 07 
  1157 00:0EEE: 00 00 00 00  				WORD 0,0,10300,1024
       00:0EF2: 3C 28 00 04 
  1158 00:0EF6: F6 0B 5A 19  				WORD 3062,6490,10300,204
                    0
       00:0EFA: 3C 28 F8 07 
  1159 00:0EFE: 00 00 00 00  				WORD 0,0,10300,1024
       00:0F02: 3C 28 00 04 
  1160 00:0F06: 7A 04 FB 07  				WORD 1146,2043,10300,102
                    4
       00:0F0A: 3C 28 00 04 
  1161 00:0F0E: 7A 04 FB 07  				WORD 1146,2043,10300,512
       00:0F12: 3C 28 00 02 
  1162 00:0F16: 7A 04 00 00  				WORD 1146,0,0,256
       00:0F1A: 00 00 00 01 
  1163 00:0F1E: 00 00 00 00  				WORD 0,0,0,128
       00:0F22: 00 00 80 00 
  1164 00:0F26: 7A 04 00 00  				WORD 1146,0,6875,1024
       00:0F2A: DB 1A 00 04 
  1165 00:0F2E: 00 00 00 00  				WORD 0,0,6875,512
  Sun Jan 31 2016  1:45                                                Page 37

    "VGA VGA.asm"
    "VGA"

       00:0F32: DB 1A 00 02 
  1166 00:0F36: 00 00 00 00  				WORD 0,0,6875,256
       00:0F3A: DB 1A 00 01 
  1167 00:0F3E: 00 00 00 00  				WORD 0,0,6875,128
       00:0F42: DB 1A 80 00 
  1168 00:0F46: F5 08 5A 19  				WORD 2293,6490,11560,102
                    4
       00:0F4A: 28 2D 00 04 
  1169 00:0F4E: 00 00 00 00  				WORD 0,0,10915,512
       00:0F52: A3 2A 00 02 
  1170 00:0F56: 00 00 00 00  				WORD 0,0,0,256
       00:0F5A: 00 00 00 01 
  1171 00:0F5E: 00 00 00 00  				WORD 0,0,0,128
       00:0F62: 00 00 80 00 
  1172 00:0F66: 7A 04 00 00  				WORD 1146,0,6875,1024
       00:0F6A: DB 1A 00 04 
  1173 00:0F6E: 7A 04 00 00  				WORD 1146,0,6875,512
       00:0F72: DB 1A 00 02 
  1174 00:0F76: 00 00 00 00  				WORD 0,0,0,256
       00:0F7A: 00 00 00 01 
  1175 00:0F7E: 00 00 00 00  				WORD 0,0,0,128
       00:0F82: 00 00 80 00 
  1176 00:0F86: 7A 04 FB 07  				WORD 1146,2043,10915,102
                    4
       00:0F8A: A3 2A 00 04 
  1177 00:0F8E: 00 00 FB 07  				WORD 0,2043,10300,512
       00:0F92: 3C 28 00 02 
  1178 00:0F96: 00 00 00 00  				WORD 0,0,0,256
       00:0F9A: 00 00 00 01 
  1179 00:0F9E: 00 00 00 00  				WORD 0,0,0,128
       00:0FA2: 00 00 80 00 
  1180 00:0FA6: F5 08 FB 07  				WORD 2293,2043,10915,102
                    4
       00:0FAA: A3 2A 00 04 
  1181 00:0FAE: 00 00 FB 07  				WORD 0,2043,10915,512
       00:0FB2: A3 2A 00 02 
  1182 00:0FB6: 00 00 00 00  				WORD 0,0,0,256
       00:0FBA: 00 00 00 01 
  1183 00:0FBE: 00 00 00 00  				WORD 0,0,0,128
       00:0FC2: 00 00 80 00 
  1184 00:0FC6: 7A 04 5A 19  				WORD 1146,6490,6875,1024
       00:0FCA: DB 1A 00 04 
  1185 00:0FCE: 7A 04 00 00  				WORD 1146,0,6875,512
       00:0FD2: DB 1A 00 02 
  1186 00:0FD6: 00 00 00 00  				WORD 0,0,6875,256
       00:0FDA: DB 1A 00 01 
  1187 00:0FDE: 00 00 00 00  				WORD 0,0,6875,128
       00:0FE2: DB 1A 80 00 
  1188 00:0FE6: F5 08 00 00  				WORD 2293,0,6875,1024
       00:0FEA: DB 1A 00 04 
  1189 00:0FEE: 00 00 00 00  				WORD 0,0,6875,512
       00:0FF2: DB 1A 00 02 
  1190 00:0FF6: F5 08 00 00  				WORD 2293,0,0,256
       00:0FFA: 00 00 00 01 
  1191 00:0FFE: 00 00 00 00  				WORD 0,0,0,128
  Sun Jan 31 2016  1:45                                                Page 38

    "VGA VGA.asm"
    "VGA"

       00:1002: 00 00 80 00 
  1192 00:1006: FB 05 FB 07  				WORD 1531,2043,8175,1024
       00:100A: EF 1F 00 04 
  1193 00:100E: FB 05 FB 07  				WORD 1531,2043,8175,512
       00:1012: EF 1F 00 02 
  1194 00:1016: FB 05 00 00  				WORD 1531,0,8175,256
       00:101A: EF 1F 00 01 
  1195 00:101E: 00 00 00 00  				WORD 0,0,8175,128
       00:1022: EF 1F 80 00 
  1196 00:1026: FB 05 00 00  				WORD 1531,0,8175,1024
       00:102A: EF 1F 00 04 
  1197 00:102E: 00 00 00 00  				WORD 0,0,8175,512
       00:1032: EF 1F 00 02 
  1198 00:1036: 00 00 00 00  				WORD 0,0,8175,256
       00:103A: EF 1F 00 01 
  1199 00:103E: 00 00 00 00  				WORD 0,0,8175,128
       00:1042: EF 1F 80 00 
  1200 00:1046: A8 0A 5A 19  				WORD 2728,6490,8175,1024
       00:104A: EF 1F 00 04 
  1201 00:104E: 00 00 00 00  				WORD 0,0,0,512
       00:1052: 00 00 00 02 
  1202 00:1056: 00 00 00 00  				WORD 0,0,0,256
       00:105A: 00 00 00 01 
  1203 00:105E: 00 00 00 00  				WORD 0,0,0,128
       00:1062: 00 00 80 00 
  1204 00:1066: FB 05 00 00  				WORD 1531,0,0,1024
       00:106A: 00 00 00 04 
  1205 00:106E: FB 05 00 00  				WORD 1531,0,0,512
       00:1072: 00 00 00 02 
  1206 00:1076: 00 00 00 00  				WORD 0,0,0,256
       00:107A: 00 00 00 01 
  1207 00:107E: 00 00 00 00  				WORD 0,0,0,128
       00:1082: 00 00 80 00 
  1208 00:1086: FB 05 FB 07  				WORD 1531,2043,7717,1024
       00:108A: 25 1E 00 04 
  1209 00:108E: 00 00 FB 07  				WORD 0,2043,7717,512
       00:1092: 25 1E 00 02 
  1210 00:1096: 00 00 00 00  				WORD 0,0,0,256
       00:109A: 00 00 00 01 
  1211 00:109E: 00 00 00 00  				WORD 0,0,0,128
       00:10A2: 00 00 80 00 
  1212 00:10A6: A8 0A FB 07  				WORD 2728,2043,0,1024
       00:10AA: 00 00 00 04 
  1213 00:10AE: 00 00 FB 07  				WORD 0,2043,0,512
       00:10B2: 00 00 00 02 
  1214 00:10B6: 00 00 00 00  				WORD 0,0,0,256
       00:10BA: 00 00 00 01 
  1215 00:10BE: 00 00 00 00  				WORD 0,0,0,128
       00:10C2: 00 00 80 00 
  1216 00:10C6: FB 05 5A 19  				WORD 1531,6490,6125,1024
       00:10CA: ED 17 00 04 
  1217 00:10CE: FB 05 00 00  				WORD 1531,0,6125,512
       00:10D2: ED 17 00 02 
  1218 00:10D6: 00 00 00 00  				WORD 0,0,0,256
       00:10DA: 00 00 00 01 
  Sun Jan 31 2016  1:45                                                Page 39

    "VGA VGA.asm"
    "VGA"

  1219 00:10DE: 00 00 00 00  				WORD 0,0,0,128
       00:10E2: 00 00 80 00 
  1220 00:10E6: F5 08 5A 19  				WORD 2293,6490,0,1024
       00:10EA: 00 00 00 04 
  1221 00:10EE: 00 00 00 00  				WORD 0,0,0,512
       00:10F2: 00 00 00 02 
  1222 00:10F6: FB 05 5A 19  				WORD 1531,6490,0,1024
       00:10FA: 00 00 00 04 
  1223 00:10FE: 00 00 00 00  				WORD 0,0,0,512
       00:1102: 00 00 00 02 
  1224 00:1106: 7A 04 FB 07  				WORD 1146,2043,9175,2040
       00:110A: D7 23 F8 07 
  1225 00:110E: 00 00 FB 07  				WORD 0,2043,9175,512
       00:1112: D7 23 00 02 
  1226 00:1116: 7A 04 00 00  				WORD 1146,0,9175,2040
       00:111A: D7 23 F8 07 
  1227 00:111E: 00 00 00 00  				WORD 0,0,9175,512
       00:1122: D7 23 00 02 
  1228 00:1126: 7A 04 00 00  				WORD 1146,0,9175,2040
       00:112A: D7 23 F8 07 
  1229 00:112E: 00 00 00 00  				WORD 0,0,9175,1024
       00:1132: D7 23 00 04 
  1230 00:1136: 00 00 00 00  				WORD 0,0,9175,512
       00:113A: D7 23 00 02 
  1231 00:113E: 00 00 00 00  				WORD 0,0,9175,256
       00:1142: D7 23 00 01 
  1232 00:1146: F5 08 5A 19  				WORD 2293,6490,9175,128
       00:114A: D7 23 80 00 
  1233 00:114E: 00 00 00 00  				WORD 0,0,9175,64
       00:1152: D7 23 40 00 
  1234 00:1156: 00 00 00 00  				WORD 0,0,9175,32
       00:115A: D7 23 20 00 
  1235 00:115E: 00 00 00 00  				WORD 0,0,9175,16
       00:1162: D7 23 10 00 
  1236 00:1166: 7A 04 00 00  				WORD 1146,0,0,16
       00:116A: 00 00 10 00 
  1237 00:116E: 7A 04 00 00  				WORD 1146,0,0,32
       00:1172: 00 00 20 00 
  1238 00:1176: 00 00 00 00  				WORD 0,0,0,128
       00:117A: 00 00 80 00 
  1239 00:117E: 00 00 00 00  				WORD 0,0,0,256
       00:1182: 00 00 00 01 
  1240 00:1186: 7A 04 FB 07  				WORD 1146,2043,0,512
       00:118A: 00 00 00 02 
  1241 00:118E: 00 00 FB 07  				WORD 0,2043,0,1024
       00:1192: 00 00 00 04 
  1242 00:1196: 00 00 00 00  				WORD 0,0,0,1536
       00:119A: 00 00 00 06 
  1243 00:119E: 00 00 00 00  				WORD 0,0,0,2040
       00:11A2: 00 00 F8 07 
  1244 00:11A6: F5 08 FB 07  				WORD 2293,2043,7285,2040
       00:11AA: 75 1C F8 07 
  1245 00:11AE: 00 00 FB 07  				WORD 0,2043,6875,1536
       00:11B2: DB 1A 00 06 
  1246 00:11B6: 00 00 00 00  				WORD 0,0,6875,1200
  Sun Jan 31 2016  1:45                                                Page 40

    "VGA VGA.asm"
    "VGA"

       00:11BA: DB 1A B0 04 
  1247 00:11BE: 00 00 00 00  				WORD 0,0,6875,960
       00:11C2: DB 1A C0 03 
  1248 00:11C6: 7A 04 5A 19  				WORD 1146,6490,0,800
       00:11CA: 00 00 20 03 
  1249 00:11CE: 7A 04 00 00  				WORD 1146,0,0,640
       00:11D2: 00 00 80 02 
  1250 00:11D6: 00 00 00 00  				WORD 0,0,6490,800
       00:11DA: 5A 19 20 03 
  1251 00:11DE: 00 00 00 00  				WORD 0,0,6125,960
       00:11E2: ED 17 C0 03 
  1252 00:11E6: F5 08 00 00  				WORD 2293,0,6125,1200
       00:11EA: ED 17 B0 04 
  1253 00:11EE: 00 00 00 00  				WORD 0,0,6125,1536
       00:11F2: ED 17 00 06 
  1254 00:11F6: F5 08 00 00  				WORD 2293,0,0,1840
       00:11FA: 00 00 30 07 
  1255 00:11FE: 00 00 00 00  				WORD 0,0,0,2040
       00:1202: 00 00 F8 07 
  1256 00:1206: FB 07 FB 07  				WORD 2043,2043,7285,2040
       00:120A: 75 1C F8 07 
  1257 00:120E: FB 07 FB 07  				WORD 2043,2043,6875,1984
       00:1212: DB 1A C0 07 
  1258 00:1216: FB 07 00 00  				WORD 2043,0,6875,1920
       00:121A: DB 1A 80 07 
  1259 00:121E: 00 00 00 00  				WORD 0,0,6875,1856
       00:1222: DB 1A 40 07 
  1260 00:1226: FB 07 FB 07  				WORD 2043,2043,6875,1792
       00:122A: DB 1A 00 07 
  1261 00:122E: 00 00 FB 07  				WORD 0,2043,0,1728
       00:1232: 00 00 C0 06 
  1262 00:1236: 00 00 00 00  				WORD 0,0,0,1664
       00:123A: 00 00 80 06 
  1263 00:123E: 00 00 00 00  				WORD 0,0,0,1600
       00:1242: 00 00 40 06 
  1264 00:1246: F6 0B 5A 19  				WORD 3062,6490,8175,1536
       00:124A: EF 1F 00 06 
  1265 00:124E: 00 00 00 00  				WORD 0,0,8175,1472
       00:1252: EF 1F C0 05 
  1266 00:1256: 00 00 00 00  				WORD 0,0,0,1408
       00:125A: 00 00 80 05 
  1267 00:125E: 00 00 00 00  				WORD 0,0,0,1344
       00:1262: 00 00 40 05 
  1268 00:1266: FB 07 00 00  				WORD 2043,0,6490,1280
       00:126A: 5A 19 00 05 
  1269 00:126E: FB 07 00 00  				WORD 2043,0,6125,1216
       00:1272: ED 17 C0 04 
  1270 00:1276: 00 00 00 00  				WORD 0,0,6125,1152
       00:127A: ED 17 80 04 
  1271 00:127E: 00 00 00 00  				WORD 0,0,6125,1088
       00:1282: ED 17 40 04 
  1272 00:1286: FB 05 FB 07  				WORD 1531,2043,0,1024
       00:128A: 00 00 00 04 
  1273 00:128E: 00 00 FB 07  				WORD 0,2043,0,960
       00:1292: 00 00 C0 03 
  Sun Jan 31 2016  1:45                                                Page 41

    "VGA VGA.asm"
    "VGA"

  1274 00:1296: 00 00 00 00  				WORD 0,0,0,896
       00:129A: 00 00 80 03 
  1275 00:129E: 00 00 00 00  				WORD 0,0,0,832
       00:12A2: 00 00 40 03 
  1276 00:12A6: F6 0B 00 00  				WORD 3062,0,6125,768
       00:12AA: ED 17 00 03 
  1277 00:12AE: 00 00 00 00  				WORD 0,0,6125,704
       00:12B2: ED 17 C0 02 
  1278 00:12B6: 00 00 00 00  				WORD 0,0,0,640
       00:12BA: 00 00 80 02 
  1279 00:12BE: 00 00 00 00  				WORD 0,0,0,576
       00:12C2: 00 00 40 02 
  1280 00:12C6: FB 05 5A 19  				WORD 1531,6490,5457,512
       00:12CA: 51 15 00 02 
  1281 00:12CE: FB 05 00 00  				WORD 1531,0,5457,448
       00:12D2: 51 15 C0 01 
  1282 00:12D6: 00 00 FB 07  				WORD 0,2043,0,384
       00:12DA: 00 00 80 01 
  1283 00:12DE: 00 00 00 00  				WORD 0,0,0,320
       00:12E2: 00 00 40 01 
  1284 00:12E6: F6 0B 5A 19  				WORD 3062,6490,4087,256
       00:12EA: F7 0F 00 01 
  1285 00:12EE: 00 00 00 00  				WORD 0,0,4087,192
       00:12F2: F7 0F C0 00 
  1286 00:12F6: F6 0B 5A 19  				WORD 3062,6490,4087,128
       00:12FA: F7 0F 80 00 
  1287 00:12FE: 00 00 00 00  				WORD 0,0,4087,64
       00:1302: F7 0F 40 00 
  1288 00:1306: FF           				BYTE 255
  1289                        
  1290                        				
  1291 00:1307:              	ENDS
  1292                        
  1293                        ;-----------------------------
  1294                        ;
  1295                        ;		Reset and Interrupt Vectors (define for 
                    265, 816/02 are subsets)
  1296                        ;
  1297                        ;-----------------------------
  1298                        
  1299                        Shadow_VECTORS	SECTION OFFSET $7EE0
  1300                        							
                    	;65C816 Interrupt Vectors
  1301                        							
                    	;Status bit E = 0 (Native mode, 16 bit mode)
  1302 00:7EE0: 59 05        				DW badVec		
                    ; $FFE0 - IRQRVD4(816)
  1303 00:7EE2: 59 05        				DW badVec		
                    ; $FFE2 - IRQRVD5(816)
  1304 00:7EE4: 59 05        				DW badVec		
                    ; $FFE4 - COP(816)
  1305 00:7EE6: 59 05        				DW badVec		
                    ; $FFE6 - BRK(816)
  1306 00:7EE8: 59 05        				DW badVec		
                    ; $FFE8 - ABORT(816)
  Sun Jan 31 2016  1:45                                                Page 42

    "VGA VGA.asm"
    "VGA"

  1307 00:7EEA: 59 05        				DW badVec		
                    ; $FFEA - NMI(816)
  1308 00:7EEC: 59 05        				DW badVec		
                    ; $FFEC - IRQRVD(816)
  1309 00:7EEE: 59 05        				DW badVec		
                    ; $FFEE - IRQ(816)
  1310                        							
                    	;Status bit E = 1 (Emulation mode, 8 bit mode)
  1311 00:7EF0: 59 05        				DW badVec		
                    ; $FFF0 - IRQRVD2(8 bit Emulation)(IRQRVD(265))
  1312 00:7EF2: 59 05        				DW badVec		
                    ; $FFF2 - IRQRVD1(8 bit Emulation)(IRQRVD(265))
  1313 00:7EF4: 59 05        				DW badVec		
                    ; $FFF4 - COP(8 bit Emulation)
  1314 00:7EF6: 59 05        				DW badVec   	; $FFF6 
                    - IRQRVD0(8 bit Emulation)(IRQRVD(265))
  1315 00:7EF8: 59 05        				DW badVec		
                    ; $FFF8 - ABORT(8 bit Emulation)
  1316                        							
                    	; Common 8 bit Vectors for all CPUs
  1317 00:7EFA: 59 05        				DW badVec		
                    ; $FFFA -  NMIRQ (ALL)
  1318 00:7EFC: 00 02        				DW START		
                    ; $FFFC -  RESET (ALL)
  1319 00:7EFE: 56 05        				DW IRQHandler	; $FFFE 
                    -  IRQBRK (ALL)
  1320 00:7F00:              	ENDS
  1321                        
  1322                        vectors	SECTION OFFSET $FFE0
  1323                        							
                    	;65C816 Interrupt Vectors
  1324                        							
                    	;Status bit E = 0 (Native mode, 16 bit mode)
  1325 00:FFE0: 59 05        				DW badVec		
                    ; $FFE0 - IRQRVD4(816)
  1326 00:FFE2: 59 05        				DW badVec		
                    ; $FFE2 - IRQRVD5(816)
  1327 00:FFE4: 59 05        				DW badVec		
                    ; $FFE4 - COP(816)
  1328 00:FFE6: 59 05        				DW badVec		
                    ; $FFE6 - BRK(816)
  1329 00:FFE8: 59 05        				DW badVec		
                    ; $FFE8 - ABORT(816)
  1330 00:FFEA: 59 05        				DW badVec		
                    ; $FFEA - NMI(816)
  1331 00:FFEC: 59 05        				DW badVec		
                    ; $FFEC - IRQRVD(816)
  1332 00:FFEE: 59 05        				DW badVec		
                    ; $FFEE - IRQ(816)
  1333                        							
                    	;Status bit E = 1 (Emulation mode, 8 bit mode)
  1334 00:FFF0: 59 05        				DW badVec		
                    ; $FFF0 - IRQRVD2(8 bit Emulation)(IRQRVD(265))
  1335 00:FFF2: 59 05        				DW badVec		
                    ; $FFF2 - IRQRVD1(8 bit Emulation)(IRQRVD(265))
  Sun Jan 31 2016  1:45                                                Page 43

    "VGA VGA.asm"
    "VGA"

  1336 00:FFF4: 59 05        				DW badVec		
                    ; $FFF4 - COP(8 bit Emulation)
  1337 00:FFF6: 59 05        				DW badVec		
                    ; $FFF6 - IRQRVD0(8 bit Emulation)(IRQRVD(265))
  1338 00:FFF8: 59 05        				DW badVec		
                    ; $FFF8 - ABORT(8 bit Emulation)
  1339                        							
                    	; Common 8 bit Vectors for all CPUs
  1340 00:FFFA: 59 05        				DW badVec		
                    ; $FFFA -  NMIRQ (ALL)
  1341 00:FFFC: 00 02        				DW START		
                    ; $FFFC -  RESET (ALL)
  1342 00:FFFE: 56 05        				DW IRQHandler	; $FFFE 
                    -  IRQBRK (ALL)
  1343 01:0000:              	ENDS
  1344                        	END


      Lines assembled: 1344
      Errors: 0
